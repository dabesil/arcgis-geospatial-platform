import{dv as b,gr as V,A as s,cK as c,cG as F,cL as h,gs as E,a0 as o,a1 as a,a2 as $}from"./index-jfgqsXUF.js";import{t as D}from"./memoize-DmxaQ-k8.js";import{y as C}from"./elevationInfoUtils-2r8GnhYC.js";import{y as A}from"./hitTestSelectUtils-BtJ68T-A.js";import{o as I,i as G}from"./queryEngineUtils-DHTGO3XX.js";import{i as m,r as L,n as d}from"./symbologySnappingCandidates-CwsyNBOE.js";import"./vendor-0HVaVRtn.js";import"./quantityUtils-AG1xhowq.js";import"./projectVectorToVector-DArql78_.js";import"./projectPointToVector-BY6hJskn.js";import"./geodesicUtils-BJF8eY80.js";import"./plane-oDu3IImc.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-Dtd2HFNG.js";import"./RouteLayerInteraction-R0v9L7GA.js";import"./GraphicsLayer-dBDZScBF.js";import"./Stop-8QJn0bxB.js";import"./networkEnums-FLEDwOgG.js";import"./VertexSnappingCandidate-zZhZ5GCO.js";import"./PointSnappingHint-3mmYHgB5.js";let r=class extends b{get availability(){return 1}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,i=e!=null&&e.type==="3d";if(!i||t.type==="subtype-group")return m();const n=async(l,p)=>(await V(e.whenLayerView(t),p)).elevationAlignPointsInFeatures(l,p);return m(i,{elevationInfo:t.elevationInfo,alignPointsInFeatures:n})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="subtype-group";return L(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource;return e!=null&&e.type==="3d"&&t.type!=="subtype-group"?d(this._symbologySnappingSupported,async(i,n)=>{const l=await e.whenLayerView(t);return s(n),l.queryForSymbologySnapping({candidates:i,spatialReference:e.spatialReference},n)}):d()}get _layerView(){const{view:e}=this;if(e==null)return null;const{layer:t}=this.layerSource;return e.allLayerViews.find(i=>i.layer===t)}get _layerView3D(){const{view:e}=this;return e==null||e.type==="2d"?null:this._layerView}get _symbologySnappingSupported(){return this._layerView3D!=null&&this._layerView3D.symbologySnappingSupported}initialize(){const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="subtype-group"&&this.addHandles([e.elevationProvider.on("elevation-change",({context:i})=>{const{elevationInfo:n}=t;C(i,n)&&this._snappingElevationAligner.notifyElevationSourceChange()}),c(()=>t.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),h),c(()=>this._layerView3D!=null?this._layerView3D.layer?.renderer:null,()=>this._symbologySnappingFetcher.notifySymbologyChange(),h),F(()=>this._layerView3D?.layer,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())])}constructor(e){super(e),this.view=null,this.updating=!1,this._memoizedMakeGetGroundElevation=D(G)}refresh(){}async fetchCandidates(e,t){const{layer:i}=this.layerSource,n=i.source;if(!n?.querySnapping)return[];const l=i.createQuery();this._layerView&&"effectiveDisplayFilter"in this._layerView&&(l.where=E(l.where,this._layerView.effectiveDisplayFilter?.where));const p=A(e,this.view?.type??"2d",l),v=await n.querySnapping(p,{signal:t});s(t);const u=e.coordinateHelper.spatialReference,y=await this._snappingElevationAligner.alignCandidates(v.candidates,u,t);s(t);const g=await this._symbologySnappingFetcher.fetch(y,t);s(t);const w=g.length===0?y:[...y,...g],S=this._snappingElevationFilter.filter(p,w),f=this._memoizedMakeGetGroundElevation(this.view,u);return S.map(_=>I(_,f))}};o([a({constructOnly:!0})],r.prototype,"layerSource",void 0),o([a({constructOnly:!0})],r.prototype,"view",void 0),o([a()],r.prototype,"_snappingElevationAligner",null),o([a()],r.prototype,"_snappingElevationFilter",null),o([a()],r.prototype,"_symbologySnappingFetcher",null),o([a()],r.prototype,"_layerView",null),o([a()],r.prototype,"_layerView3D",null),o([a()],r.prototype,"_symbologySnappingSupported",null),r=o([$("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],r);export{r as FeatureCollectionSnappingSource};
