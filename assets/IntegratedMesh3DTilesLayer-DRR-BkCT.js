import{ff as j,f4 as D,f5 as U,dr as V,f6 as X,fg as z,fh as P,ds as W,aX as b,cm as w,aG as $,W as c,er as k,et as f,eJ as _,aB as M,e1 as E,dZ as L,fi as I,fj as S,U as g,fk as h,s as G,bj as R,P as F,ab as T,a0 as u,a1 as d,fl as q,fe as K,a2 as Z}from"./index-B9tlkxep.js";import{$ as N,Z as B,w as J}from"./elevationInfoUtils-dlMESJD1.js";import"./vendor-0HVaVRtn.js";let p=class extends j(D(U(V(X(z(P(W))))))){constructor(a){super(a),this.operationalLayerType="IntegratedMesh3DTilesLayer",this.spatialReference=new b({wkid:4326,vcsWkid:115700}),this.fullExtent=new w(-180,-90,180,90,this.spatialReference),this.url=null,this.type="integrated-mesh-3dtiles",this.path=null,this.minScale=0,this.maxScale=0}set elevationInfo(a){a!=null&&a.mode!=="absolute-height"||this._set("elevationInfo",a),this._validateElevationInfo(a)}_verifyArray(a,s){if(!Array.isArray(a)||a.length<s)return!1;for(const o of a)if(typeof o!="number")return!1;return!0}_initFullExtent(a){const s=a.root?.boundingVolume;if(!s)return;if(s.box){const t=s?.box;if(t[3]>7972671&&t[7]>7972671&&t[11]>7945940)return}const o=a.root?.transform,x=g();if(s.region&&this._verifyArray(s.region,6)){const t=s.region,l=$(t[0]),n=$(t[1]),i=t[4],r=$(t[2]),e=$(t[3]),y=t[5];this.fullExtent=new w({xmin:l,ymin:n,zmin:i,xmax:r,ymax:e,zmax:y,spatialReference:this.spatialReference})}else if(s.sphere&&this._verifyArray(s.sphere,4)){const t=s.sphere,l=c(t[0],t[1],t[2]),n=t[3]/Math.sqrt(3),i=g();k(i,l,c(n,n,n));const r=g();if(f(r,l,c(n,n,n)),o&&this._verifyArray(o,16)){const v=o;_(x,i,v),M(i,x),_(x,r,v),M(r,x)}E(i,L,0,i,b.WGS84,0),E(r,L,0,r,b.WGS84,0);const e=g(),y=g();I(e,i,r),S(y,i,r),this.fullExtent=new w({xmin:e[0],ymin:e[1],zmin:e[2],xmax:y[0],ymax:y[1],zmax:y[2],spatialReference:this.spatialReference})}else if(s.box&&this._verifyArray(s.box,12)){const t=s.box,l=c(t[0],t[1],t[2]),n=c(t[3],t[4],t[5]),i=c(t[6],t[7],t[8]),r=c(t[9],t[10],t[11]),e=[];for(let m=0;m<8;++m)e.push(g());if(f(e[0],l,n),f(e[0],e[0],i),f(e[0],e[0],r),h(e[1],l,n),f(e[1],e[1],i),f(e[1],e[1],r),f(e[2],l,n),h(e[2],e[2],i),f(e[2],e[2],r),h(e[3],l,n),h(e[3],e[3],i),f(e[3],e[3],r),f(e[4],l,n),f(e[4],e[4],i),h(e[4],e[4],r),h(e[5],l,n),f(e[5],e[5],i),h(e[5],e[5],r),f(e[6],l,n),h(e[6],e[6],i),h(e[6],e[6],r),h(e[7],l,n),h(e[7],e[7],i),h(e[7],e[7],r),o&&this._verifyArray(o,16)){const m=o;for(let A=0;A<8;++A)_(e[A],e[A],m)}const y=c(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),v=c(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);for(let m=0;m<8;++m)E(e[m],L,0,e[m],b.WGS84,0),I(v,v,e[m]),S(y,y,e[m]);this.fullExtent=new w({xmin:v[0],ymin:v[1],zmin:v[2],xmax:y[0],ymax:y[1],zmax:y[2],spatialReference:this.spatialReference})}}async load(a){return this.addResolvingPromise(this._doLoad(a)),this}async _doLoad(a){const s=a!=null?a.signal:null;try{await this.loadFromPortal({supportedTypes:["3DTiles Service"],validateItem:o=>{if(o.typeKeywords?.includes("IntegratedMesh"))return!0;throw new G("portal:invalid-layer-item-type","Invalid layer item, expected '${expectedType}' ",{expectedType:"3DTiles Service containing IntegratedMesh"})}},a)}catch(o){R(o)}this.url&&await F(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:s}).then(x=>{this._initFullExtent(x.data)},x=>{R(x)})}async fetchAttributionData(){return this.load().then(()=>({}))}_validateElevationInfo(a){const s="Integrated mesh 3d tiles layers";N(T.getLogger(this),B(s,"absolute-height",a)),N(T.getLogger(this),J(s,a))}};u([d({type:["IntegratedMesh3DTilesLayer"]})],p.prototype,"operationalLayerType",void 0),u([d({type:b})],p.prototype,"spatialReference",void 0),u([d({type:w})],p.prototype,"fullExtent",void 0),u([d(q)],p.prototype,"elevationInfo",null),u([d({type:["show","hide"]})],p.prototype,"listMode",void 0),u([d(K)],p.prototype,"url",void 0),u([d({readOnly:!0})],p.prototype,"type",void 0),u([d({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],p.prototype,"path",void 0),u([d({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:!1,write:!1}}}})],p.prototype,"minScale",void 0),u([d({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:!1,write:!1}}}})],p.prototype,"maxScale",void 0),p=u([Z("esri.layers.IntegratedMesh3DTilesLayer")],p);const Q=p;export{Q as default};
