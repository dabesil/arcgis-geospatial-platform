const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/featureLayerUtils-yCzfHFh8.js","assets/index-B9tlkxep.js","assets/vendor-0HVaVRtn.js","assets/index-CDFczaSZ.css","assets/originUtils-CPX8CCAY.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/utils-pX4H7R-b.js","assets/jsonContext-B0yUoiRM.js","assets/saveUtils-SBzP_mdW.js","assets/fetchService-CP82B1od.js","assets/FeatureLayerSource-A82hKrCP.js","assets/MeshLocalVertexSpace-CBQ9UpmK.js","assets/meshVertexSpaceUtils-DsZk72m1.js","assets/External-CUXTXo3c.js","assets/MeshTransform-D69nUWNO.js","assets/mat4f64-Dk4dwAN8.js","assets/quat-Qoau-HDL.js","assets/mat3f64-q3fE-ZOt.js","assets/quatf64-aQ5IuZRd.js","assets/axisAngleDegrees-C7P8of_4.js","assets/editingSupport-CMUMfUj5.js","assets/clientSideDefaults-CBkTtQ5F.js","assets/QueryEngineCapabilities-B_pTbIiR.js","assets/QueryTask-CdmS_kd5.js","assets/executeForIds-DPm_8e_T.js","assets/query-COrFWVdl.js","assets/pbfQueryUtils-DiB9ezXP.js","assets/pbf-CwrvXk2T.js","assets/memoryEstimations-CfiaYUy-.js","assets/OptimizedGeometry-3yaiiwEe.js","assets/OptimizedFeature-BRI6IeKu.js","assets/OptimizedFeatureSet-Blu9Ckm7.js","assets/executeQueryJSON-D39XH0bW.js","assets/featureConversionUtils-BXK7il35.js"])))=>i.map(i=>d[i]);
import{k2 as re,k3 as se,k4 as ie,cO as _,k5 as ae,k6 as ne,k7 as oe,k8 as le,k9 as ue,f6 as Q,aT as H,f2 as pe,gA as de,i8 as R,ka as ye,cQ as ce,N as w,fS as he,ab as G,s as g,aX as fe,ia as be,kb as B,gs as D,kc as J,im as z,R as Z,kd as me,ke as ge,kf as ve,a0 as i,a1 as a,kg as we,fD as Fe,ic as K,jI as Ie,id as Se,kh as E,ie as Te,ig as $e,f8 as je,iz as Oe,iy as Ce,ii as Ee,cM as _e,c9 as $,a2 as W,jJ as ke,i4 as xe,jK as Le,dq as Ae,fE as qe,dr as Pe,f3 as De,ff as Re,f4 as Ge,f5 as Ve,fg as Me,fh as Ne,ds as Ue,a6 as C,g9 as Qe,_ as V,hV as O,cK as He,fz as Be,bj as Je,gB as ze,ki as Ze,I as Ke,cf as We,h_ as Xe,kj as Ye,kk as et,jL as tt,gr as rt,kl as st,km as it,kn as at,fI as nt,ko as ot,kp as lt,ey as ut,kq as pt,kr as dt,ks as yt,kt as ct,fJ as ht,i9 as ft,jN as bt,f7 as mt,ku as gt}from"./index-B9tlkxep.js";import"./vendor-0HVaVRtn.js";const X={key:"type",base:ae,errorContext:"renderer",typeMap:{simple:_,"unique-value":ie,"class-breaks":se}},P=re({types:X});function vt(e,t){const r=e.drawingInfo?.renderer,s=r?P(r,e,t):null;if(s?.type==="simple")return ne(s.symbol,null)?s.symbol.clone():null}const wt=["#ed5151","#149ece","#a7c636","#9e559c","#fc921f","#ffde3e","#f789d8","#b7814a","#3caf99","#6b6bd6","#b54779","#7f7f7f"];function Ft(e,t){return oe(wt,e,{offset:!0,shuffle:!0}).reverse().map(r=>{const s=t.clone();return s.type==="cim"?le(s,r):ue(s,r),new _({symbol:s})})}const M=K();let It=0;function T(e,t){let r=e.json.write;return typeof r!="object"&&(r=e.json.write={}),r.ignoreOrigin=!0,t?.spatialOnly&&(r.layerContainerTypes=E),e}function f(e){const t={write:{ignoreOrigin:!0}};return e?.name&&(t.name=e.name),typeof t.write=="object"&&(e?.spatialOnly&&(t.write.layerContainerTypes=E),e?.target&&(t.write.target=e.target)),t}function St(e){return new _({symbol:Tt(e)})}function Tt(e){switch(e){case"point":case"multipoint":return ve.clone();case"polyline":return ge.clone();case"polygon":case"multipatch":return me.clone();default:return null}}function $t(e,t){return!!t&&e?.type==="unique-value"&&e.field!=null&&e.field.toLowerCase()===t.toLowerCase()&&!e.field2&&!e.field3&&!e.valueExpression}function Y(e,t){return e==null?null:t.subtypes?.find(r=>r.code===e)}function jt(e,t){let r=null;switch(t.geometryType){case"esriGeometryPoint":case"esriGeometryMultipoint":r="point";break;case"esriGeometryPolyline":r="line";break;case"esriGeometryPolygon":case"esriGeometryMultiPatch":r="polygon";break;default:t.type,r=null}const s={},l=Y(e,t);if(l!=null){const{defaultValues:o}=l;for(const u in o)s[u]=o[u]}return s[t.subtypeField]=e,new z({name:"New Feature",drawingTool:r,prototype:{attributes:s}})}let n=class extends Q(H.ClonableMixin(pe.IdentifiableMixin(de))){constructor(e){super(e),this.attributeTableTemplate=null,this.charts=null,this.editingEnabled=!0,this.fieldOverrides=null,this.fieldsIndex=null,this.formTemplate=null,this.id=`${Date.now().toString(16)}-subtype-sublayer-${It++}`,this.type="subtype-sublayer",this.labelsVisible=!0,this.labelingInfo=null,this.layerType="ArcGISFeatureLayer",this.legendEnabled=!0,this.listMode="show",this.minScale=0,this.maxScale=0,this.opacity=1,this.parent=null,this.popupEnabled=!0,this.popupTemplate=null,this.subtypeCode=null,this.templates=null,this.title=null,this.visible=!0}load(e){return R(this.renderer,this.fieldsIndex),Promise.resolve(this)}get _titleCreator(){const e=this._get("_titleCreator");return ce(e),new ye({fieldsIndex:this.fieldsIndex,objectIdField:this.objectIdField,displayField:this.parent?.displayField??"",fields:this.fields,effectivePopupTemplate:this.popupTemplate??this.defaultPopupTemplate})}get capabilities(){return this.parent?.capabilities}get effectiveCapabilities(){return this.parent?.effectiveCapabilities}get effectiveEditingEnabled(){const{parent:e}=this;return e?e.effectiveEditingEnabled&&this.editingEnabled:this.editingEnabled}get elevationInfo(){return this.parent?.elevationInfo}get featureTitleFields(){return[...this._titleCreator.requiredFields]}writeFieldOverrides(e,t,r){const{fields:s,parent:l}=this;let o;if(s){o=[];let u=0;s.forEach(({name:d,alias:c,editable:I,visible:S})=>{if(!S)return;const h=l?.fields?.find(k=>k.name===d);if(!h)return;const m={name:d};let v=!1;c!==h.alias&&(m.alias=c,v=!0),I!==h.editable&&(m.editable=I,v=!0),o.push(m),v&&u++}),u===0&&o.length===s.length&&(o=null)}else o=w(e);o?.length&&he(r,o,t)}get fields(){const{parent:e,fieldOverrides:t,subtypeCode:r}=this,s=e?.fields;if(!e||!s?.length)return null;const{subtypes:l,subtypeField:o}=e,u=l?.find(S=>S.code===r),d=u?.defaultValues,c=u?.domains,I=[];for(const S of s){const h=S.clone(),{name:m}=h,v=t?.find(j=>j.name===m);if(h.visible=!t?.length||!!v,v){const{alias:j,editable:te}=v;j&&(h.alias=j),te===!1&&(h.editable=!1)}const k=d?.[m]??null;h.defaultValue=m===o?r:k;const x=c?.[m]??null;h.domain=m===o?null:x?x.type==="inherited"?h.domain:x.clone():null,I.push(h)}return I}get floorInfo(){return this.parent?.floorInfo}get isTable(){return!!this.parent?.isTable}get geometryType(){return this.parent?.geometryType}get globalIdField(){return this.parent?this.parent.globalIdField:(G.getLogger(this).error(y("globalIdField")),null)}get effectiveScaleRange(){const{minScale:e,maxScale:t}=this;return{minScale:e,maxScale:t}}get objectIdField(){return this.parent||G.getLogger(this).error(y("objectIdField")),this.parent?.objectIdField}get defaultPopupTemplate(){return this.createPopupTemplate()}get relationships(){return this.parent?.relationships}set renderer(e){R(e,this.fieldsIndex),this._override("renderer",e)}get renderer(){if(this._isOverridden("renderer"))return this._get("renderer");const{parent:e}=this;return e&&!e.isTable&&e.geometryType!=="mesh"?St(e.geometryType):null}readRendererFromService(e,t,r){if(t.type==="Table")return null;const s=t.drawingInfo?.renderer,l=P(s,t,r);let o;const{subtypeCode:u}=this;if(u!=null&&$t(l,t.subtypeField)){const d=l.uniqueValueInfos?.find(({value:c})=>(c=typeof c=="number"?String(c):c)===String(u));d&&(o=new _({symbol:d.symbol}))}else l?.type!=="simple"||l.visualVariables?.length||(o=l);return o}readRenderer(e,t,r){const s=t?.layerDefinition?.drawingInfo?.renderer;return s?s.visualVariables?.some(o=>o.type!=="rotationInfo")?void 0:P(s,t,r)||void 0:void 0}get spatialReference(){return this.parent?.spatialReference??fe.WGS84}get subtypeField(){return this.parent?.subtypeField}readTemplatesFromService(e,t){return[jt(this.subtypeCode,t)]}readTitleFromService(e,t){const r=Y(this.subtypeCode,t);return r!=null?r.name:null}get url(){return this.parent?.url}get userHasUpdateItemPrivileges(){return!!this.parent?.userHasUpdateItemPrivileges}async addAttachment(e,t){const{parent:r}=this;if(!r)throw y("addAttachment");if(e.getAttribute(r.subtypeField)!==this.subtypeCode)throw new g("subtype-sublayer:addAttachment","The feature provided does not belong to this SubtypeSublayer");return r.addAttachment(e,t)}async updateAttachment(e,t,r){const{parent:s}=this;if(!s)throw y("updateAttachment");if(e.getAttribute(s.subtypeField)!==this.subtypeCode)throw new g("subtype-sublayer:updateAttachment","The feature provided does not belong to this SubtypeSublayer");return s.updateAttachment(e,t,r)}async deleteAttachments(e,t){const{parent:r}=this;if(!r)throw y("deleteAttachments");if(e.getAttribute(r.subtypeField)!==this.subtypeCode)throw new g("subtype-sublayer:deleteAttachments","The feature provided does not belong to this SubtypeSublayer");return r.deleteAttachments(e,t)}async applyEdits(e,t){if(!this.parent)throw y("applyEdits");return this.parent.applyEdits(e,t)}createPopupTemplate(e){let t=this;const{parent:r,fields:s,title:l}=this;if(r){const{displayField:o,editFieldsInfo:u,objectIdField:d}=r;t={displayField:o,editFieldsInfo:u,fields:s,objectIdField:d,title:l}}return be(t,e)}createQuery(){if(!this.parent)throw y("createQuery");const e=B(this.parent),t=`${this.parent.subtypeField}=${this.subtypeCode}`;return e.where=D(t,this.parent.definitionExpression),e}getFeatureTitle(e,t={timeZone:"system",fetchMissingFields:!1}){return this._titleCreator.getTitle(this,e,t)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){if(!t?.excludeImpliedDomains&&this.parent){const r=J(this.parent,e);if(r)return r}return this._getLayerDomain(e)}async queryAttachments(e,t){const r=await this.load();if(!r.parent)throw y("queryAttachments");const s=e.clone();return s.where=ee(s.where,r.parent.subtypeField,r.subtypeCode),r.parent.queryAttachments(e,t)}async queryFeatureCount(e,t){const r=await this.load();if(!r.parent)throw y("queryFeatureCount");return r.parent.queryFeatureCount(L(r.parent,r,e),t)}async queryFeatures(e,t){const r=await this.load();if(!r.parent)throw y("queryFeatures");return r.parent.queryFeatures(L(r.parent,r,e),t)}async queryObjectIds(e,t){const r=await this.load();if(!r.parent)throw y("queryObjectIds");return r.parent.queryObjectIds(L(r.parent,r,e),t)}async queryRelatedFeatures(e,t){const r=await this.load();if(!r.parent)throw y("queryRelatedFeatures");return r.parent.queryRelatedFeatures(e,t)}async queryRelatedFeaturesCount(e,t){const r=await this.load();if(!r.parent)throw y("queryRelatedFeaturesCount");return r.parent.queryRelatedFeaturesCount(e,t)}_getLayerDomain(e){const t=this.fieldsIndex.get(e);return t?t.domain:null}};i([a({clonable:!1,readOnly:!0})],n.prototype,"_titleCreator",null),i([a({type:we,json:f({name:"attributeTableInfo"})})],n.prototype,"attributeTableTemplate",void 0),i([a({readOnly:!0,json:{read:!1}})],n.prototype,"capabilities",null),i([a({readOnly:!0,json:{read:!1}})],n.prototype,"effectiveCapabilities",null),i([a({json:f()})],n.prototype,"charts",void 0),i([a({type:Boolean,nonNullable:!0,json:f({name:"enableEditing"})})],n.prototype,"editingEnabled",void 0),i([a({type:Boolean,readOnly:!0})],n.prototype,"effectiveEditingEnabled",null),i([a({readOnly:!0,json:{read:!1}})],n.prototype,"elevationInfo",null),i([a({clonable:!1,readOnly:!0})],n.prototype,"featureTitleFields",null),i([a({json:{name:"layerDefinition.fieldOverrides",origins:{service:{read:!1}},write:{ignoreOrigin:!0,allowNull:!0}}})],n.prototype,"fieldOverrides",void 0),i([Fe("fieldOverrides")],n.prototype,"writeFieldOverrides",null),i([a({...M.fields,readOnly:!0,json:{read:!1}})],n.prototype,"fields",null),i([a(M.fieldsIndex)],n.prototype,"fieldsIndex",void 0),i([a({readOnly:!0,json:{read:!1}})],n.prototype,"floorInfo",null),i([a({type:Ie,json:f({name:"formInfo"})})],n.prototype,"formTemplate",void 0),i([a({type:String,clonable:!1,json:{origins:{service:{read:!1},"portal-item":{read:!1}},write:{ignoreOrigin:!0}}})],n.prototype,"id",void 0),i([a({readOnly:!0,json:{read:!1}})],n.prototype,"isTable",null),i([a({readOnly:!0,json:{read:!1}})],n.prototype,"geometryType",null),i([a({readOnly:!0,json:{read:!1}})],n.prototype,"globalIdField",null),i([a({readOnly:!0,json:{read:!1}})],n.prototype,"type",void 0),i([a(T(w(Se)))],n.prototype,"labelsVisible",void 0),i([a({type:[$e],json:{name:"layerDefinition.drawingInfo.labelingInfo",origins:{service:{read:!1}},read:{reader:Te},write:{ignoreOrigin:!0,layerContainerTypes:E}}})],n.prototype,"labelingInfo",void 0),i([a({type:["ArcGISFeatureLayer"],readOnly:!0,json:{read:!1,write:{ignoreOrigin:!0,layerContainerTypes:E}}})],n.prototype,"layerType",void 0),i([a(T(w(je)))],n.prototype,"legendEnabled",void 0),i([a({type:["show","hide"]})],n.prototype,"listMode",void 0),i([a((()=>{const e=w(Oe);return e.json.origins.service.read=!1,T(e,{spatialOnly:!0})})())],n.prototype,"minScale",void 0),i([a((()=>{const e=w(Ce);return e.json.origins.service.read=!1,T(e,{spatialOnly:!0})})())],n.prototype,"maxScale",void 0),i([a({readOnly:!0})],n.prototype,"effectiveScaleRange",null),i([a({readOnly:!0,json:{read:!1}})],n.prototype,"objectIdField",null),i([a({type:Number,range:{min:0,max:1},nonNullable:!0,json:f({spatialOnly:!0})})],n.prototype,"opacity",void 0),i([a({clonable:!1})],n.prototype,"parent",void 0),i([a(T(w(Ee)))],n.prototype,"popupEnabled",void 0),i([a({type:_e,json:f({name:"popupInfo"})})],n.prototype,"popupTemplate",void 0),i([a({readOnly:!0})],n.prototype,"defaultPopupTemplate",null),i([a({readOnly:!0,json:{read:!1}})],n.prototype,"relationships",null),i([a({types:X,json:f({target:"layerDefinition.drawingInfo.renderer",spatialOnly:!0})})],n.prototype,"renderer",null),i([$("service","renderer",["drawingInfo.renderer","subtypeField","type"])],n.prototype,"readRendererFromService",null),i([$("renderer",["layerDefinition.drawingInfo.renderer"])],n.prototype,"readRenderer",null),i([a({readOnly:!0,json:{read:!1}})],n.prototype,"spatialReference",null),i([a({type:Number,json:{origins:{service:{read:!1}},write:{ignoreOrigin:!0}}})],n.prototype,"subtypeCode",void 0),i([a({readOnly:!0,json:{read:!1}})],n.prototype,"subtypeField",null),i([a({type:[z],json:f({name:"layerDefinition.templates"})})],n.prototype,"templates",void 0),i([$("service","templates",["geometryType","subtypeField","subtypes","type"])],n.prototype,"readTemplatesFromService",null),i([a({type:String,json:f()})],n.prototype,"title",void 0),i([$("service","title",["subtypes"])],n.prototype,"readTitleFromService",null),i([a({readOnly:!0,json:{read:!1}})],n.prototype,"url",null),i([a({readOnly:!0})],n.prototype,"userHasUpdateItemPrivileges",null),i([a({type:Boolean,nonNullable:!0,json:f({name:"visibility",spatialOnly:!0})})],n.prototype,"visible",void 0),n=i([W("esri.layers.support.SubtypeSublayer")],n);const L=(e,t,r)=>{if(!r)return t.createQuery();const s=Z.from(r);return s.where=ee(s.where,e.subtypeField,t.subtypeCode),s},ee=(e,t,r)=>{const s=new RegExp(`${t}\\s*=\\s*\\d+`),l=`${t}=${r}`,o=e??"";return s.test(o)?o.replace(s,l):D(l,o)},y=e=>new g(`This sublayer must have a parent SubtypeGroupLayer in order to use ${e}`),F=n,b="SubtypeGroupLayer",Ot="esri.layers.SubtypeGroupLayer";function N(e,t){return new g("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${t}`,{layer:e})}function U(e,t){const r=[];for(const s of e){const l=new F;l.read(s,t),r.push(l)}return r}const A=K();function q(){return{name:"layerType",read:{enabled:!0},write:{enabled:!0,ignoreOrigin:!0,isRequired:!0}}}let p=class extends ke(xe(Le(Ae(qe(Pe(De(Re(Ge(Ve(Q(Me(Ne(H.ClonableMixin(Ue)))))))))))))){constructor(...e){super(...e),this._sublayerLookup=new Map,this.fields=null,this.fieldsIndex=null,this.outFields=null,this.sublayers=new(C.ofType(F)),this.useUniqueColorsForSublayers=!0,this.supportedSourceTypes=new Set(["Feature Layer","Table"]),this.timeInfo=null,this.title="Layer",this.type="subtype-group",this._debouncedSaveOperations=Qe(async(t,r,s)=>{const{save:l,saveAs:o}=await V(()=>import("./featureLayerUtils-yCzfHFh8.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9]));switch(t){case O.SAVE:return l(this,r);case O.SAVE_AS:return o(this,s,r)}}),this.addHandles(He(()=>this.sublayers,(t,r)=>this._handleSublayersChange(t,r),Be))}destroy(){this.source?.destroy()}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}load(e){const t=e!=null?e.signal:null,r=this.loadFromPortal({supportedTypes:["Feature Service"]},e).catch(Je).then(async()=>{if(!this.url)throw new g("subtype-grouplayer:missing-url-or-source","SubtypeGroupLayer must be created with either a url or a portal item");if(this.layerId==null)throw new g("subtype-grouplayer:missing-layerid","layerId is required for a SubtypeGroupLayer created with url");return this._initLayerProperties(await this.createGraphicsSource(t))}).then(()=>ze(this,"load",e));return this.addResolvingPromise(r),Promise.resolve(this)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("gdbVersion"),this.commitProperty("historicMoment"),this.commitProperty("returnZ"),this.commitProperty("capabilities"),this.commitProperty("returnM"),(this._get("createQueryVersion")??0)+1}get editingEnabled(){return this.loaded&&this.capabilities!=null&&this.capabilities.operations.supportsEditing&&this.userHasEditingPrivileges}get effectiveEditingEnabled(){return Ze(this)}get operationalLayerType(){return this.isTable?"SubtypeGroupTable":"SubtypeGroupLayer"}get parsedUrl(){const e=Ke(this.url);return e!=null&&this.layerId!=null&&(e.path=We(e.path,this.layerId.toString())),e}set source(e){this._get("source")!==e&&this._set("source",e)}readTitleFromService(e,{name:t}){return this.url?Xe(this.url,t):t}async addAttachment(e,t){const r=await Ye(this,e,t,b);return this.lastEditsEventDate=new Date,r}async updateAttachment(e,t,r){const s=await et(this,e,t,r,b);return this.lastEditsEventDate=new Date,s}async applyEdits(e,t){return tt(this,e,t)}on(e,t){return super.on(e,t)}async createGraphicsSource(e){const{default:t}=await rt(V(()=>import("./FeatureLayerSource-A82hKrCP.js"),__vite__mapDeps([10,1,2,3,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33])),e);return new t({layer:this,supportedSourceTypes:this.supportedSourceTypes}).load({signal:e})}createQuery(){const e=B(this),t=this.sublayers.map(r=>r.subtypeCode);return e.where=D(`${this.subtypeField} IN (${t.join(",")})`,this.definitionExpression),e}async deleteAttachments(e,t){const r=await st(this,e,t,b);return this.lastEditsEventDate=new Date,r}async fetchRecomputedExtents(e){return it(this,e,b)}findSublayerForFeature(e){const t=this.fieldsIndex.get(this.subtypeField),r=e.attributes[t.name];return this.findSublayerForSubtypeCode(r)}findSublayerForSubtypeCode(e){return this._sublayerLookup.get(e)}getFieldDomain(e,t){if(!t?.excludeImpliedDomains){const s=J(this,e);if(s)return s}const r=at(this,t?.feature);if(r){const s=r.domains?.[e];return s?.type==="inherited"?this._getLayerDomain(e):s}return this._getLayerDomain(e)}loadAll(){return nt(this,e=>{e(this.sublayers)})}async queryAttachments(e,t){return ot(this,e,t,b)}async queryFeatures(e,t){const r=await this.load(),s=Z.from(e)??r.createQuery(),l=s.outFields??[];l.includes(this.subtypeField)||(l.push(this.subtypeField),s.outFields=l);const o=await r.source.queryFeatures(s,t);if(o?.features)for(const u of o.features)u.layer=u.sourceLayer=this.findSublayerForFeature(u);return o}async queryObjectIds(e,t){return(await lt(this,e,t,b)).filter(ut)}async queryFeatureCount(e,t){return pt(this,e,t,b)}async queryExtent(e,t){return dt(this,e,t,b)}async queryRelatedFeatures(e,t){return yt(this,e,t,b)}async queryRelatedFeaturesCount(e,t){return ct(this,e,t,b)}async save(e){return this._debouncedSaveOperations(O.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(O.SAVE_AS,t,e)}write(e,t){const{origin:r,layerContainerType:s,messages:l}=t;if(this.isTable){if(r==="web-scene"||r==="web-map"&&s!=="tables")return l?.push(N(this,"using a table source cannot be written to web scenes and web maps")),null}else if(this.loaded&&r==="web-map"&&s==="tables")return l?.push(N(this,"using a non-table source cannot be written to tables in web maps")),null;return this.sublayers?.length?super.write(e,t):(l?.push(new g("web-document-write:invalid-property",`Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' has invalid value for 'sublayers' property. 'sublayers' collection should contain at least one sublayer`,{layer:this})),null)}serviceSupportsSpatialReference(e){return!!this.loaded&&ht(this,e)}async getFeatureTitle(e,t={timeZone:"system",fetchMissingFields:!1}){const r=this.findSublayerForFeature(e);return r?await r.getFeatureTitle(e,t):this.displayField&&this.fieldsIndex.has(this.displayField)?e.attributes[this.fieldsIndex.get(this.displayField).name]??"":this.objectIdField&&this.fieldsIndex.has(this.objectIdField)?e.attributes[this.fieldsIndex.get(this.objectIdField).name]??"":""}get featureTitleFields(){const e=new Set;for(const t of this.sublayers){const r=t.featureTitleFields;for(const s of r)e.add(s)}return[...e]}_getLayerDomain(e){const t=this.fieldsIndex.get(e);return t?t.domain:null}async _initLayerProperties(e){this._set("source",e);const{sourceJSON:t}=e;if(t&&(this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})),!this.subtypes?.length)throw new g("subtype-grouplayer:missing-subtypes","SubtypeGroupLayer must be created using a layer with subtypes");this._verifyFields(),ft(this.timeInfo,this.fieldsIndex)}async hasDataChanged(){return bt(this)}_verifyFields(){const e=this.parsedUrl?.path??"undefined";this.objectIdField||console.log("SubtypeGroupLayer: 'objectIdField' property is not defined (url: "+e+")"),this.isTable||e.search(/\/FeatureServer\//i)!==-1||this.fields?.some(t=>t.type==="geometry")||console.log("SubtypeGroupLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+e+")")}_handleSublayersChange(e,t){t&&(t.forEach(r=>{r.parent=null}),this.removeHandles("sublayers-owner"),this._sublayerLookup.clear()),e&&(e.forEach(r=>{r.parent=this,this._sublayerLookup.set(r.subtypeCode,r)}),this.addHandles([e.on("after-add",({item:r})=>{r.parent=this,this._sublayerLookup.set(r.subtypeCode,r)}),e.on("after-remove",({item:r})=>{r.parent=null,this._sublayerLookup.delete(r.subtypeCode)})],"sublayers-owner"))}};i([a({readOnly:!0})],p.prototype,"createQueryVersion",null),i([a({readOnly:!0})],p.prototype,"editingEnabled",null),i([a({readOnly:!0})],p.prototype,"effectiveEditingEnabled",null),i([a({...A.fields,readOnly:!0,json:{origins:{service:{read:!0}},read:!1}})],p.prototype,"fields",void 0),i([a(A.fieldsIndex)],p.prototype,"fieldsIndex",void 0),i([a(mt)],p.prototype,"id",void 0),i([a({type:["show","hide","hide-children"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],p.prototype,"listMode",void 0),i([a({type:["SubtypeGroupLayer","SubtypeGroupTable"],json:{...q(),origins:{"web-document":q(),"portal-item":q()}}})],p.prototype,"operationalLayerType",null),i([a(A.outFields)],p.prototype,"outFields",void 0),i([a({readOnly:!0})],p.prototype,"parsedUrl",null),i([a({clonable:!1})],p.prototype,"source",null),i([a({type:C.ofType(F),json:{origins:{service:{read:{source:"subtypes",reader(e,t,r){let s=null;if(this.useUniqueColorsForSublayers){const o=vt(t,r);s=o?Ft(e.length,o):null}const l=e.map(({code:o},u)=>{const d=new F({subtypeCode:o});d.read(t,r);const c=s?.[u];return c&&d.read({drawingInfo:{renderer:c.toJSON()}},r),d});return new(C.ofType(F))(l)}}}},read:{source:["layers","tables"],reader(e,t,r){let s;return t.layerType==="SubtypeGroupLayer"&&t.layers?.length?s=U(t.layers,r):t.layerType==="SubtypeGroupTable"&&t.tables?.length&&(s=U(t.tables,r)),new(C.ofType(F))(s)}},write:{ignoreOrigin:!0,writer(e,t,r,s){const l=[];for(const o of e){const u=o.write({},s);l.push(u)}this.isTable?t.tables=l:t.layers=l}}}})],p.prototype,"sublayers",void 0),i([a()],p.prototype,"useUniqueColorsForSublayers",void 0),i([a({type:gt})],p.prototype,"timeInfo",void 0),i([a({json:{origins:{"portal-item":{write:{enabled:!0,ignoreOrigin:!0,writerEnsuresNonNull:!0}}}}})],p.prototype,"title",void 0),i([$("service","title",["name"])],p.prototype,"readTitleFromService",null),i([a({json:{read:!1}})],p.prototype,"type",void 0),i([a({clonable:!1,readOnly:!0})],p.prototype,"featureTitleFields",null),p=i([W(Ot)],p);const _t=p;export{_t as default};
