import{bw as E,s as w,g6 as T,ab as I,N as G,C as J,a8 as M,cj as g,O as N,fN as z}from"./index-DZKbNDrL.js";import{t as Y}from"./ImmutableArray-BPVd6ESQ.js";import{r as F,i as O}from"./TimeOnly-TSt7AKcm.js";import"./vendor-0HVaVRtn.js";let m=null;function V(e,o,a,n={}){const r=o.elementType,c="value",p=r.type==="array"?[{name:c,type:r.type,elementType:r.elementType}]:r.type==="dictionary"?[{name:c,type:r.type,properties:r.properties}]:[{name:c,type:r.type}];return new Y(e.map(i=>{const t={};return S(t,p,{[c]:i},a,n),t[c]}))}function q(e,o,a={}){const n=e instanceof N?new z({source:e.features,geometryType:e.geometryType,fields:e.fields,spatialReference:e.spatialReference}):e;return o.constructFeatureSet(n,a.spatialReference,null,!0,a.lruCache,a.interceptor)}function B(e,o,a={}){const{spatialReference:n,interceptor:r,lruCache:c}=a;return typeof e=="string"?o.createFeatureSetCollectionFromService(e,n,c,r):o.createFeatureSetCollectionFromMap(e,n,c,r)}function H(e,o,a,n={}){const r={};return S(r,o.properties,e,a,n),new m.Dictionary(r)}function S(e,o,a,n,r={}){const c={};for(const p of Object.keys(a))c[p.toLowerCase()]=a[p];for(const p of o){const i=p.name.toLowerCase();if(r.variablesPreProcessed)e[i]=c[i];else switch(p.type){case"array":{const t=c[i];e[i]=t==null?null:V(t,p,n,r);break}case"feature":{const t=c[i];e[i]=t==null?null:m.Feature.createFromGraphic(t,r?.timeZone);break}case"featureSet":{const t=c[i];e[i]=t==null?null:n?q(t,n,r):null;break}case"featureSetCollection":{const t=c[i];e[i]=t==null?null:n?B(t,n,r):null;break}case"dictionary":{const t=c[i];e[i]=t==null?null:H(t,p,n,r);break}case"date":{const t=c[i];e[i]=t?t instanceof g?t:r?.timeZone?g.dateJSAndZoneToArcadeDate(t,r?.timeZone):g.dateJSToArcadeDate(t):null;break}case"dateOnly":{const t=c[i];e[i]=t?t instanceof O?t:O.fromReader(t):null;break}case"time":{const t=c[i];e[i]=t?t instanceof F?t:F.fromReader(t):null;break}case"knowledgeGraph":case"geometry":case"boolean":case"text":case"number":e[i]=c[i];break;case"voxel":{const t=c[i];e[i]=t==null?null:new m.Voxel(t,r?.timeZone);break}}}}function L(e,o){for(const a of e)o.push(a),a.type==="dictionary"&&L(a.properties,o);return o}function R(e,o,a,n,r){const{spatialReference:c,interceptor:p,lruCache:i,console:t,abortSignal:y,timeZone:u,services:$={portal:J.getDefault()}}=a,f={vars:{},spatialReference:c,interceptor:p,timeZone:u,lrucache:i,useAsync:r,services:$,console:t,abortSignal:y};return o&&S(f.vars,e.variables,o,n,a),f}function v(e,o){switch(o.getArcadeType(e)){case"number":case"text":case"boolean":case"point":case"polygon":case"polyline":case"multipoint":case"extent":return e;case"date":return e.toJSDate();case"time":case"dateOnly":return e.toString();case"feature":{const a=(e.type,e),n="geometry"in a?a.geometry():null,r="readAttributes"in a?a.readAttributes():a.attributes;return new M({geometry:n,attributes:r})}case"dictionary":{const a=e,n=a.attributes,r={};for(const c of Object.keys(n))r[c]=v(a.field(c),o);return r}case"array":return("toArray"in e?e.toArray():e).map(a=>v(a,o))}return e}const P={variables:[{name:"$feature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$userInput",type:"geometry"},{name:"$graph",type:"knowledgeGraph"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},Z={variables:[{name:"$feature",type:"feature"},{name:"$aggregatedFeatures",type:"featureSet"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},j={variables:[{name:"$voxel",type:"voxel"}]},D=new Map([["aggregate-field",{variables:[{name:"$feature",type:"feature"}]}],["form-constraint",{variables:[{name:"$feature",type:"feature"}]}],["feature-z",{variables:[{name:"$feature",type:"feature"}]}],["field-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$datastore",type:"featureSetCollection"}]}],["form-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$originalFeature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$featureSet",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$editContext",type:"dictionary",properties:[{name:"editType",type:"text"}]}]}],["labeling",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup",P],["popup-element",P],["popup-feature-reduction",Z],["popup-element-feature-reduction",Z],["visualization",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup-voxel",j],["popup-element-voxel",j]]);function _(e){e==="feature-reduction-popup"?(T(I.getLogger("esri.arcade"),'profile name: "feature-reduction-popup"',{replacement:'"popup-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-feature-reduction"):e==="feature-reduction-popup-element"&&(T(I.getLogger("esri.arcade"),'profile name: "feature-reduction-popup-element"',{replacement:'"popup-element-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-element-feature-reduction");const o=D.get(e);if(!o){const a=Array.from(D.keys()).map(n=>`'${n}'`).join(", ");throw new w("createArcadeProfile:invalid-profile-name",`Invalid profile name '${e}'. You must specify one of the following values: ${a}`)}return G(o)}async function ee(e,o,a={}){m||(m=await E());const{arcade:n,arcadeUtils:r}=m,{loadScriptDependencies:c,referencesMember:p,scriptIsAsync:i}=n,t=L(o.variables,[]),y=t.filter(s=>s.type==="featureSet"||s.type==="featureSetCollection").map(s=>s.name.toLowerCase()),u=n.parseScript(e,y);if(!u)throw new w("arcade:invalid-script","Unable to create SyntaxTree");const $=r.extractFieldNames(u),f=n.scriptTouchesGeometry(u),C=t.map(s=>s.name.toLowerCase()).filter(s=>p(u,s)),l=i(u,y);await c(u,l,y);const h={vars:{},spatialReference:null,useAsync:l};for(const s of C)h.vars[s]="any";const{lruCache:x}=a,A=n.compileScript(u,h),k=n.featureSetUtils(),{services:U}=a;return{execute:(s,d={})=>{if(l)throw new w("arcade:invalid-execution-mode","Cannot execute the script in synchronous mode");const b=A(R(o,s,{lruCache:x,...d},k,l));return d.rawOutput?b:v(b,r)},executeAsync:async(s,d={})=>{const b=await A(R(o,s,{lruCache:x,services:U,...d},k,l));return d.rawOutput?b:v(b,r)},isAsync:l,variablesUsed:C,fieldsUsed:$,geometryUsed:f,syntaxTree:u}}export{ee as createArcadeExecutor,_ as createArcadeProfile};
