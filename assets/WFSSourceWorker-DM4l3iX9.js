import{s as d,A as p,e6 as T,ea as E,ey as q,eb as P,ab as y,ez as g,cc as C,ah as I}from"./index-jfgqsXUF.js";import{s as b,u as $}from"./featureConversionUtils-BAN7iPzO.js";import{u as j}from"./executeQueryForSnapping-CKUXw3XQ.js";import{f as N}from"./FeatureStore-xM2hGjLr.js";import{x as O,j as Q}from"./queryUtils-BqV_MD1M.js";import{L as M}from"./QueryEngine-BAWh_FLQ.js";import{E as k,N as L}from"./geojson-CN8PzMSP.js";import{g as A}from"./sourceUtils-DOe0jEAD.js";import{o as U,e as Z,K as _}from"./wfsUtils-kU9lGGKa.js";import"./vendor-0HVaVRtn.js";import"./OptimizedFeature-CQnDPIV2.js";import"./memoryEstimations-BucWCUN2.js";import"./OptimizedGeometry-aBFBEGLw.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-CbVV7g16.js";import"./BoundsStore-DLe4Gen1.js";import"./PooledRBush-DYGfsruq.js";import"./optimizedFeatureQueryEngineAdapter-LmXD017v.js";import"./json-Wa8cmqdu.js";import"./WhereClauseCache-CCYkt0B3.js";import"./WhereClause-mqdqH7zu.js";import"./TimeOnly-C39e4_MX.js";import"./QueryEngineCapabilities-B_pTbIiR.js";import"./quantizationUtils-Cx9cQSOo.js";import"./utils-BuigcV0U.js";import"./utils-D6Su7kzx.js";import"./ClassBreaksDefinition-1D8MEf8v.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-4n3tUwwc.js";import"./date-DCujAECq.js";import"./xmlUtils-CtUoQO7q.js";const x="esri.layers.WFSLayer";class Ce{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(t,e={}){const{getFeatureUrl:r,getFeatureOutputFormat:o,fields:n,geometryType:u,featureType:s,maxRecordCount:i,maxTotalRecordCount:m,maxPageCount:R,objectIdField:f,customParameters:F}=t,{spatialReference:h,getFeatureSpatialReference:c}=U(r,s,t.spatialReference);try{await O(c,h)}catch{throw new d("unsupported-projection","Projection not supported",{inSpatialReference:c,outSpatialReference:h})}p(e),this._customParameters=F,this._featureType=s,this._fieldsIndex=T.fromLayerJSON({fields:n,dateFieldsTimeReference:n.some(S=>S.type==="esriFieldTypeDate")?{timeZoneIANA:E}:null}),this._geometryType=u,this._getFeatureUrl=r,this._getFeatureOutputFormat=o,this._getFeatureSpatialReference=c,this._maxRecordCount=i,this._maxTotalRecordCount=m,this._maxPageCount=R,this._objectIdField=f,this._spatialReference=h;let l=await this._snapshotFeatures(e);if(l.errors.length>0&&(this._supportsPagination=!1,l=await this._snapshotFeatures(e),l.errors.length>0))throw l.errors[0];return this._queryEngine=new M({fieldsIndex:this._fieldsIndex,geometryType:u,hasM:!1,hasZ:!1,objectIdField:f,spatialReference:h,timeInfo:null,featureStore:new N({geometryType:u,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(l.features),{warnings:w(l),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new d("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),(await this._queryEngine.executeQueryForIds(t,e.signal)).filter(q)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),j(this._queryEngine,t,e.signal)}async queryAttributeBins(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(t,e.signal)}async refresh(t){return this._customParameters=t.customParameters,this._maxRecordCount=t.maxRecordCount,this._maxTotalRecordCount=t.maxTotalRecordCount,this._maxPageCount=t.maxPageCount,this._snapshotTask?.abort(),this._snapshotTask=P(e=>this._snapshotFeatures({signal:e})),this._snapshotTask.promise.then(e=>{this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(e.features);for(const r of w(e))y.getLogger(x).warn(new g("wfs-layer:refresh-warning",r.message,r.details));e.errors?.length&&y.getLogger(x).warn(new g("wfs-layer:refresh-error","Refresh completed with errors",{errors:e.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(t){const e=t?.signal,r=this._maxTotalRecordCount,o=this._maxPageCount,n=this._supportsPagination?await Z(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:e}):void 0;let u=[];const s=[];if(n==null)try{u=await this._singleQuery(e)}catch(i){C(i)||s.push(i)}else{const i=Math.min(n,r),m=J(this,Math.max(1,Math.min(Math.ceil(i/this._maxRecordCount),o)),e);await Promise.allSettled(Array.from({length:10}).map(()=>v(m,u,s)))}return p(e),{features:u,totalRecordCount:n,maxTotalRecordCount:r,maxPageCount:o,errors:s}}async _singleQuery(t){const e=await _(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:t});return this._processGeoJSON(e,{signal:t})}async _pageQuery(t,e){const r=t*this._maxRecordCount,o=await _(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:r,count:this._maxRecordCount,signal:e});return this._processGeoJSON(o,{startIndex:r,signal:e})}_processGeoJSON(t,e){k(t,this._getFeatureSpatialReference.wkid);const{startIndex:r,signal:o}=e;p(o);const n=L(t,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!I(this._spatialReference,this._getFeatureSpatialReference))for(const s of n)s.geometry!=null&&(s.geometry=b(Q($(s.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let u=r??1;for(const s of n){const i={};A(this._fieldsIndex,i,s.attributes,!0),s.attributes=i,i[this._objectIdField]==null&&(s.objectId=i[this._objectIdField]=u++)}return n}}function*J(a,t,e){for(let r=0;r<t;r++)yield a._pageQuery(r,e)}async function v(a,t,e){let r=a.next();for(;!r.done;){try{const o=await r.value;t.push(...o)}catch(o){C(o)||e.push(o)}r=a.next()}}function w(a){const t=[];return a.totalRecordCount!=null&&(a.features.length<a.totalRecordCount&&t.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${a.features.length} of ${a.totalRecordCount} in ${a.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:a.features.length,totalRecordCount:a.totalRecordCount}}),a.totalRecordCount>a.maxTotalRecordCount&&t.push({name:"wfs-layer:large-dataset",message:`The number of ${a.totalRecordCount} features exceeds the maximum allowed of ${a.maxTotalRecordCount}.`,details:{recordCount:a.features.length,totalRecordCount:a.totalRecordCount,maxTotalRecordCount:a.maxTotalRecordCount}})),t}export{Ce as default};
