import{cK as l,cL as h,O as g,a6 as w,cM as f,cN as d,cO as n,a0 as u,a2 as V}from"./index-B9tlkxep.js";import{S as b,y as S}from"./LayerView-BjAoaScD.js";import{t as _}from"./GraphicContainer-1T37TAAQ.js";import{A as T}from"./GraphicsView2D-B0iNEZ7k.js";import"./vendor-0HVaVRtn.js";import"./Container-5k0Lq3gq.js";import"./layerViewUtils-CDrrKCPO.js";import"./AGraphicContainer-DNBcPn1m.js";import"./TechniqueInstance-ccmopnDe.js";import"./UpdateTracking2D-S98CtOab.js";import"./Utils-DhbEbzY8.js";import"./BoundingBox-BqeSZFPv.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-Bz5LLHQL.js";import"./VertexArrayObject-Z0flarmS.js";import"./memoryEstimations-CfiaYUy-.js";import"./TileContainer-CdrUUyIE.js";import"./WGLContainer-DiylVyiN.js";import"./ProgramTemplate-DjKpG1ZK.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-a_P-xgQv.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-BXK7il35.js";import"./OptimizedFeature-BRI6IeKu.js";import"./OptimizedGeometry-3yaiiwEe.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-DuZdKGVq.js";import"./CIMSymbolHelper-CDczdLfR.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-DsoDj4yA.js";import"./GeometryUtils-wBrWLgdD.js";import"./rasterizingUtils-BaUVAnjr.js";import"./floatRGBA-C-404vFF.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CZRsoovd.js";import"./ShaderBuilder-43gLbQXK.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BWoxajHX.js";import"./OverrideHelper-DH6GBC0O.js";import"./quantizationUtils-T7qneWuZ.js";import"./AttributeStore-Cyarxcvp.js";import"./queryUtils-BcySug-I.js";import"./json-Wa8cmqdu.js";import"./timeSupport-Buaw2wuM.js";import"./TimeOnly-HPrYjx-l.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-BDk0SymV.js";import"./dehydratedFeatures-Cn1fMp4k.js";let y=class extends b(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(t,r){if(!this.graphicsViews.length)return null;const o=this.layer;return this.graphicsViews.reverse().flatMap(e=>{const i=this._popupTemplates.get(e),s=e.hitTest(t);for(const p of s)p.layer=o,p.sourceLayer=o,p.popupTemplate=i;return s}).map(e=>({type:"graphic",graphic:e,layer:o,mapPoint:t}))}update(t){if(this.graphicsViews)for(const r of this.graphicsViews)r.processUpdate(t)}attach(){this.addAttachHandles([l(()=>this.layer?.featureCollections,t=>{this._clear();for(const{popupInfo:r,featureSet:o,layerDefinition:e}of t){const i=g.fromJSON(o),s=new w(i.features),p=e.drawingInfo,c=r?f.fromJSON(r):null,a=d(p.renderer),m=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:s,renderer:a,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=m,this._popupTemplates.set(m,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=a.symbol):this.layer.lineSymbol=a.symbol:this.layer.polygonSymbol=a.symbol,this.graphicsViews.push(m),this.container.addChild(m.container)}},h),l(()=>this.layer?.polygonSymbol,t=>{this._graphicsViewMap.polygon.renderer=new n({symbol:t})},h),l(()=>this.layer?.lineSymbol,t=>{this._graphicsViewMap.polyline.renderer=new n({symbol:t})},h),l(()=>this.layer?.pointSymbol,t=>{this._graphicsViewMap.point.renderer=new n({symbol:t})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const t of this.graphicsViews)t.viewChange()}_clear(){this.container.removeAllChildren();for(const t of this.graphicsViews)t.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=u([V("esri.views.2d.layers.GeoRSSLayerView2D")],y);const St=y;export{St as default};
