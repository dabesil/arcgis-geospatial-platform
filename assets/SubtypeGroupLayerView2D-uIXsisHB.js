import{cK as s,cL as n,M as d,a0 as u,a2 as l}from"./index-B9tlkxep.js";import{d as g}from"./FeatureLayerView2D-Dj665sxC.js";import"./vendor-0HVaVRtn.js";import"./featureConversionUtils-BXK7il35.js";import"./OptimizedFeature-BRI6IeKu.js";import"./memoryEstimations-CfiaYUy-.js";import"./OptimizedGeometry-3yaiiwEe.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-Bvf4PPYz.js";import"./AttributeBinsFeatureSet-hgxYRA8Y.js";import"./AttributeBinsQuery-CkPhN4A_.js";import"./queryUtils-BcySug-I.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-DXnfMIQo.js";import"./LayerView-BjAoaScD.js";import"./Container-5k0Lq3gq.js";import"./layerViewUtils-CDrrKCPO.js";import"./TechniqueInstance-ccmopnDe.js";import"./UpdateTracking2D-S98CtOab.js";import"./Utils-DhbEbzY8.js";import"./BoundingBox-BqeSZFPv.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-Bz5LLHQL.js";import"./VertexArrayObject-Z0flarmS.js";import"./TileContainer-CdrUUyIE.js";import"./WGLContainer-DiylVyiN.js";import"./ProgramTemplate-DjKpG1ZK.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-a_P-xgQv.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-DuZdKGVq.js";import"./CIMSymbolHelper-CDczdLfR.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-DsoDj4yA.js";import"./GeometryUtils-wBrWLgdD.js";import"./rasterizingUtils-BaUVAnjr.js";import"./floatRGBA-C-404vFF.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CZRsoovd.js";import"./ShaderBuilder-43gLbQXK.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BWoxajHX.js";import"./CircularArray-CujHzHWW.js";import"./SDFHelper-nq3246vU.js";import"./constants-B4mRqufT.js";import"./parquet-YKVm5eO4.js";import"./popupUtils-CCnPghHD.js";import"./RefreshableLayerView-Dy5_L0FO.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const ui=i;export{ui as default};
