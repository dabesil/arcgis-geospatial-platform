import{cP as m,cQ as c,a8 as g,a6 as n,G as l,c4 as h,cE as d,a0 as o,a1 as w,a2 as u}from"./index-B9tlkxep.js";import{S as y,y as V}from"./LayerView-BjAoaScD.js";import{t as v}from"./GraphicContainer-1T37TAAQ.js";import{A as f}from"./GraphicsView2D-B0iNEZ7k.js";import"./vendor-0HVaVRtn.js";import"./Container-5k0Lq3gq.js";import"./layerViewUtils-CDrrKCPO.js";import"./AGraphicContainer-DNBcPn1m.js";import"./TechniqueInstance-ccmopnDe.js";import"./UpdateTracking2D-S98CtOab.js";import"./Utils-DhbEbzY8.js";import"./BoundingBox-BqeSZFPv.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-Bz5LLHQL.js";import"./VertexArrayObject-Z0flarmS.js";import"./memoryEstimations-CfiaYUy-.js";import"./TileContainer-CdrUUyIE.js";import"./WGLContainer-DiylVyiN.js";import"./ProgramTemplate-DjKpG1ZK.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-a_P-xgQv.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-BXK7il35.js";import"./OptimizedFeature-BRI6IeKu.js";import"./OptimizedGeometry-3yaiiwEe.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-DuZdKGVq.js";import"./CIMSymbolHelper-CDczdLfR.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-DsoDj4yA.js";import"./GeometryUtils-wBrWLgdD.js";import"./rasterizingUtils-BaUVAnjr.js";import"./floatRGBA-C-404vFF.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CZRsoovd.js";import"./ShaderBuilder-43gLbQXK.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BWoxajHX.js";import"./OverrideHelper-DH6GBC0O.js";import"./quantizationUtils-T7qneWuZ.js";import"./AttributeStore-Cyarxcvp.js";import"./queryUtils-BcySug-I.js";import"./json-Wa8cmqdu.js";import"./timeSupport-Buaw2wuM.js";import"./TimeOnly-HPrYjx-l.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-BDk0SymV.js";import"./dehydratedFeatures-Cn1fMp4k.js";let e=class extends y(V){attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m(()=>this.layer?.visible,()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()})]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(s=>({type:"graphic",graphic:s,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,s){let t;typeof i=="number"?t=[i]:i instanceof g?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(r=>r&&r.uid):n.isCollection(i)&&i.length>0&&(t=i.map(r=>r&&r.uid).toArray());const p=t?.filter(l);if(!p?.length)return h();const a=s?.name??d;return this._addHighlights(p,a),h(()=>!this.destroyed&&this._removeHighlights(p,a))}_processHighlight(){const i=this._getHighlights();this.graphicsView?.setHighlight(i)}};o([w()],e.prototype,"graphicsView",void 0),e=o([u("esri.views.2d.layers.GraphicsLayerView2D")],e);const Vi=e;export{Vi as default};
