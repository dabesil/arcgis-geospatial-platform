import{cK as s,cL as n,M as d,a0 as u,a2 as l}from"./index-jfgqsXUF.js";import{d as g}from"./FeatureLayerView2D-DYcHynar.js";import"./vendor-0HVaVRtn.js";import"./featureConversionUtils-BAN7iPzO.js";import"./OptimizedFeature-CQnDPIV2.js";import"./memoryEstimations-BucWCUN2.js";import"./OptimizedGeometry-aBFBEGLw.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-B9xIVbIO.js";import"./AttributeBinsFeatureSet-B6JveiyT.js";import"./AttributeBinsQuery-D4S88z_X.js";import"./queryUtils-BqV_MD1M.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-4n3tUwwc.js";import"./LayerView-NqyHl1Bs.js";import"./Container-DjdrwIF4.js";import"./layerViewUtils-Lm2RRReK.js";import"./TechniqueInstance-DfXe2VIg.js";import"./UpdateTracking2D-CfFEleC8.js";import"./Utils-DufyKz9p.js";import"./BoundingBox-izu4TMBJ.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject--4ZHTLY2.js";import"./VertexArrayObject-CLpjg57p.js";import"./TileContainer-DR76myUC.js";import"./WGLContainer-WFylH3LE.js";import"./ProgramTemplate-YrOnZ5NE.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt3Vg0H.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-BWsQvzDU.js";import"./CIMSymbolHelper-DaggyRNO.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-nqDekxUm.js";import"./GeometryUtils-CpMv2FgV.js";import"./rasterizingUtils-qR64sKPW.js";import"./floatRGBA-Dairvywp.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-BOY5wPZW.js";import"./ShaderBuilder-DfMB-k6o.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CI9vbH7V.js";import"./CircularArray-CujHzHWW.js";import"./SDFHelper-BAZ0ETXF.js";import"./constants-B4mRqufT.js";import"./parquet-Dv2OZ0jl.js";import"./popupUtils-CD96T0ud.js";import"./RefreshableLayerView-BwYQfjaS.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const ui=i;export{ui as default};
