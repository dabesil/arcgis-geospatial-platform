import{cK as l,cL as h,O as g,a6 as w,cM as f,cN as d,cO as n,a0 as u,a2 as V}from"./index-jfgqsXUF.js";import{S as b,y as S}from"./LayerView-NqyHl1Bs.js";import{t as _}from"./GraphicContainer-CTLH8L_o.js";import{A as T}from"./GraphicsView2D-Cj8RqP_7.js";import"./vendor-0HVaVRtn.js";import"./Container-DjdrwIF4.js";import"./layerViewUtils-Lm2RRReK.js";import"./AGraphicContainer-Pdc_pcZ4.js";import"./TechniqueInstance-DfXe2VIg.js";import"./UpdateTracking2D-CfFEleC8.js";import"./Utils-DufyKz9p.js";import"./BoundingBox-izu4TMBJ.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject--4ZHTLY2.js";import"./VertexArrayObject-CLpjg57p.js";import"./memoryEstimations-BucWCUN2.js";import"./TileContainer-DR76myUC.js";import"./WGLContainer-WFylH3LE.js";import"./ProgramTemplate-YrOnZ5NE.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt3Vg0H.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-BAN7iPzO.js";import"./OptimizedFeature-CQnDPIV2.js";import"./OptimizedGeometry-aBFBEGLw.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-BWsQvzDU.js";import"./CIMSymbolHelper-DaggyRNO.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-nqDekxUm.js";import"./GeometryUtils-CpMv2FgV.js";import"./rasterizingUtils-qR64sKPW.js";import"./floatRGBA-Dairvywp.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-BOY5wPZW.js";import"./ShaderBuilder-DfMB-k6o.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CI9vbH7V.js";import"./OverrideHelper-D_n-9eva.js";import"./quantizationUtils-Cx9cQSOo.js";import"./AttributeStore-DN-FiPBd.js";import"./queryUtils-BqV_MD1M.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CbVV7g16.js";import"./TimeOnly-C39e4_MX.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-Xh-SG6DM.js";import"./dehydratedFeatures-BQJBGVkH.js";let y=class extends b(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(t,r){if(!this.graphicsViews.length)return null;const o=this.layer;return this.graphicsViews.reverse().flatMap(e=>{const i=this._popupTemplates.get(e),s=e.hitTest(t);for(const p of s)p.layer=o,p.sourceLayer=o,p.popupTemplate=i;return s}).map(e=>({type:"graphic",graphic:e,layer:o,mapPoint:t}))}update(t){if(this.graphicsViews)for(const r of this.graphicsViews)r.processUpdate(t)}attach(){this.addAttachHandles([l(()=>this.layer?.featureCollections,t=>{this._clear();for(const{popupInfo:r,featureSet:o,layerDefinition:e}of t){const i=g.fromJSON(o),s=new w(i.features),p=e.drawingInfo,c=r?f.fromJSON(r):null,a=d(p.renderer),m=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:s,renderer:a,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=m,this._popupTemplates.set(m,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=a.symbol):this.layer.lineSymbol=a.symbol:this.layer.polygonSymbol=a.symbol,this.graphicsViews.push(m),this.container.addChild(m.container)}},h),l(()=>this.layer?.polygonSymbol,t=>{this._graphicsViewMap.polygon.renderer=new n({symbol:t})},h),l(()=>this.layer?.lineSymbol,t=>{this._graphicsViewMap.polyline.renderer=new n({symbol:t})},h),l(()=>this.layer?.pointSymbol,t=>{this._graphicsViewMap.point.renderer=new n({symbol:t})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const t of this.graphicsViews)t.viewChange()}_clear(){this.container.removeAllChildren();for(const t of this.graphicsViews)t.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=u([V("esri.views.2d.layers.GeoRSSLayerView2D")],y);const St=y;export{St as default};
