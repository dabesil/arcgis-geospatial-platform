const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/meshFeatureSet-BTtHcvao.js","assets/index-B9tlkxep.js","assets/vendor-0HVaVRtn.js","assets/index-CDFczaSZ.css","assets/Mesh-BvdtW4Yt.js","assets/axisAngleDegrees-C7P8of_4.js","assets/quat-Qoau-HDL.js","assets/mat3f64-q3fE-ZOt.js","assets/quatf64-aQ5IuZRd.js","assets/MeshComponent-qdZ18q9G.js","assets/meshProperties-C4iW0Ukm.js","assets/MeshLocalVertexSpace-CBQ9UpmK.js","assets/MeshTransform-D69nUWNO.js","assets/mat4f64-Dk4dwAN8.js","assets/MeshVertexAttributes-DF9GpPa-.js","assets/meshVertexSpaceUtils-DsZk72m1.js","assets/triangulationUtils-BveuyviX.js","assets/earcut-D9gy186-.js","assets/Indices-ByIf1rnY.js","assets/plane-RQwHz28_.js","assets/deduplicate-BCBE9PoF.js","assets/projectPointToVector-B17Wmtmh.js","assets/vertexSpaceConversion-DX7Wtevk.js","assets/spatialReferenceEllipsoidUtils-BMhQqhJE.js","assets/computeTranslationToOriginAndRotation-B1_Qo2HU.js","assets/vec3-DxT9ROBP.js","assets/BufferView-UMB8U0MY.js","assets/vec4-Bf3a-gSP.js","assets/External-CUXTXo3c.js","assets/meshFeatureAttributes-fD4cuX4p.js","assets/executeRelationshipQuery-x5mw3Ct9.js","assets/query-COrFWVdl.js","assets/pbfQueryUtils-DiB9ezXP.js","assets/pbf-CwrvXk2T.js","assets/memoryEstimations-CfiaYUy-.js","assets/OptimizedGeometry-3yaiiwEe.js","assets/OptimizedFeature-BRI6IeKu.js","assets/OptimizedFeatureSet-Blu9Ckm7.js","assets/queryAttachments-CXSGqON1.js","assets/AttachmentInfo-BHVusXaU.js","assets/executeAttributeBinsQuery-CqXXemtQ.js","assets/AttributeBinsFeatureSet-hgxYRA8Y.js","assets/AttributeBinsQuery-CkPhN4A_.js","assets/queryUtils-BcySug-I.js","assets/json-Wa8cmqdu.js","assets/FixedIntervalBinParameters-DXnfMIQo.js","assets/executeTopFeaturesQuery-iT7q15EW.js","assets/queryTopFeatures-C_dy-biL.js","assets/TopFeaturesQuery-Co2MIBnE.js","assets/executeForTopIds-qd39Iab3.js","assets/executeForTopExtents-DFcNdQ7K.js","assets/executeForTopCount-DpEz3dGl.js"])))=>i.map(i=>d[i]);
import{Q as f,R as m,cm as O,hF as T,aJ as V,dv as A,I,M as w,O as G,gr as l,_ as n,k0 as g,l1 as E,s as y,ah as L,a0 as c,a1 as h,a2 as Q}from"./index-B9tlkxep.js";import{s as M,a as $}from"./executeForIds-DPm_8e_T.js";import{x as q,f as N}from"./query-COrFWVdl.js";import{a as Z}from"./executeQueryJSON-D39XH0bW.js";import{M as B,u as k}from"./featureConversionUtils-BXK7il35.js";async function z(r,t,e){const s=f(r),o=await q(s,m.from(t),{...e}),i=o.data.extent;return!i||isNaN(i.xmin)||isNaN(i.ymin)||isNaN(i.xmax)||isNaN(i.ymax)?{count:o.data.count,extent:null}:{count:o.data.count,extent:O.fromJSON(i)}}function j(r,t){return t}function _(r,t,e,s){switch(e){case 0:return p(r,t+s,0);case 1:return r.originPosition==="lowerLeft"?p(r,t+s,1):X(r,t+s,1)}}function x(r,t,e,s){return e===2?p(r,t,2):_(r,t,e,s)}function J(r,t,e,s){return e===2?t===0?0:p(r,t,3):_(r,t,e,s)}function U(r,t,e,s){return e===3?t===0?0:p(r,t,3):x(r,t,e,s)}function p({translate:r,scale:t},e,s){return r[s]+e*t[s]}function X({translate:r,scale:t},e,s){return r[s]-e*t[s]}class Y{constructor(t){this._options=t,this.geometryTypes=["esriGeometryPoint","esriGeometryMultipoint","esriGeometryPolyline","esriGeometryPolygon"],this._previousCoordinate=[0,0],this._transform=null,this._applyTransform=j,this._lengths=[],this._currentLengthIndex=0,this._toAddInCurrentPath=0,this._vertexDimension=0,this._mValueOffset=null,this._coordinateBuffer=null,this._coordinateBufferPtr=0,this._attributesConstructor=class{}}createFeatureResult(){return{fields:[],features:[]}}finishFeatureResult(t){if(this._options.applyTransform&&(t.transform=null),this._attributesConstructor=class{},this._coordinateBuffer=null,this._lengths.length=0,!t.hasZ)return;const e=T(t.geometryType,this._options.sourceSpatialReference,t.spatialReference);if(e!=null)for(const s of t.features)e(s.geometry)}createSpatialReference(){return{}}addField(t,e){const s=t.fields;V(s),s.push(e);const o=s.map(i=>i.name);this._attributesConstructor=function(){for(const i of o)this[i]=null}}addFeature(t,e){t.features.push(e)}prepareFeatures(t){switch(this._transform=t.transform,this._options.applyTransform&&t.transform&&(this._applyTransform=this._deriveApplyTransform(t)),this._mValueOffset=null,this._vertexDimension=2,t.hasZ&&this._vertexDimension++,t.hasM&&(this._mValueOffset=this._vertexDimension,this._vertexDimension++),t.geometryType){case"esriGeometryPoint":this.addCoordinate=(e,s,o)=>this.addCoordinatePoint(e,s,o),this.createGeometry=e=>this.createPointGeometry(e);break;case"esriGeometryPolygon":this.addCoordinate=(e,s,o)=>this._addCoordinatePolygon(e,s,o),this.createGeometry=e=>this._createPolygonGeometry(e);break;case"esriGeometryPolyline":this.addCoordinate=(e,s,o)=>this._addCoordinatePolyline(e,s,o),this.createGeometry=e=>this._createPolylineGeometry(e);break;case"esriGeometryMultipoint":this.addCoordinate=(e,s,o)=>this._addCoordinateMultipoint(e,s,o),this.createGeometry=e=>this._createMultipointGeometry(e)}}createFeature(){return this._lengths.length=0,this._currentLengthIndex=0,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0,this._coordinateBuffer=null,this._coordinateBufferPtr=0,{attributes:new this._attributesConstructor}}allocateCoordinates(){}addLength(t,e,s){this._lengths.length===0&&(this._toAddInCurrentPath=e),this._lengths.push(e)}addQueryGeometry(t,e){const{queryGeometry:s,queryGeometryType:o}=e,i=this._transform?B(s.clone(),s,!1,!1,this._transform):s.clone(),u=k(i,o,!1,!1);t.queryGeometryType=o,t.queryGeometry={...u}}createPointGeometry(t){const e={x:0,y:0,spatialReference:t.spatialReference};return t.hasZ&&(e.z=0),t.hasM&&(e.m=0),e}addCoordinatePoint(t,e,s){const o=this._transform;switch(e=this._applyTransform(o,e,s,0),s){case 0:t.x=e;break;case 1:t.y=e;break;case 2:"z"in t?t.z=e:t.m=e;break;case 3:t.m=e}}_transformPathLikeValue(t,e){let s=0;e<=1&&(s=this._previousCoordinate[e],this._previousCoordinate[e]+=t);const o=this._transform;return this._mValueOffset!==null&&t===0&&e>0&&!(e%this._mValueOffset)?0:this._applyTransform(o,t,e,s)}_addCoordinatePolyline(t,e,s){this._dehydratedAddPointsCoordinate(t.paths,e,s)}_addCoordinatePolygon(t,e,s){this._dehydratedAddPointsCoordinate(t.rings,e,s)}_addCoordinateMultipoint(t,e,s){s===0&&t.points.push([]);const o=this._transformPathLikeValue(e,s);t.points[t.points.length-1].push(o)}_createPolygonGeometry(t){return{rings:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createPolylineGeometry(t){return{paths:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createMultipointGeometry(t){return{points:[],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_dehydratedAddPointsCoordinate(t,e,s){s===0&&this._toAddInCurrentPath--==0&&(t.push([]),this._toAddInCurrentPath=this._lengths[++this._currentLengthIndex]-1,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0);const o=this._transformPathLikeValue(e,s),i=t[t.length-1];s===0&&(this._coordinateBufferPtr=0,this._coordinateBuffer=new Array(this._vertexDimension),i.push(this._coordinateBuffer)),this._coordinateBuffer[this._coordinateBufferPtr++]=o}_deriveApplyTransform(t){const{hasZ:e,hasM:s}=t;return e&&s?U:e?x:s?J:_}}async function H(r,t,e){const s=f(r),o={...e},i=m.from(t),u=!i.quantizationParameters,{data:d}=await N(s,i,new Y({sourceSpatialReference:i.sourceSpatialReference,applyTransform:u}),o);return d}let a=class extends A{constructor(r){super(r),this.dynamicDataSource=null,this.fieldsIndex=null,this.gdbVersion=null,this.infoFor3D=null,this.pbfSupported=!1,this.queryAttachmentsSupported=!1,this.sourceSpatialReference=null,this.url=null}get parsedUrl(){return I(this.url)}async execute(r,t){const e=await this.executeJSON(r,t);return this.featureSetFromJSON(r,e,t)}async executeJSON(r,t){const e=this._normalizeQuery(r),s=r.outStatistics?.[0]!=null,o=w("featurelayer-pbf-statistics"),i=(!s||o)&&r.returnTrueCurves!==!0;let u;if(this.pbfSupported&&i)try{u=await H(this.url,e,t)}catch(d){if(d.name!=="query:parsing-pbf")throw d;this.pbfSupported=!1}return this.pbfSupported&&i||(u=await Z(this.url,e,t)),this._normalizeFields(u.fields),u}async featureSetFromJSON(r,t,e){if(!this._queryIs3DObjectFormat(r)||this.infoFor3D==null||!t.features)return G.fromJSON(t);const{meshFeatureSetFromJSON:s}=await l(n(()=>import("./meshFeatureSet-BTtHcvao.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])),e);return s(r,this.infoFor3D,t)}executeForCount(r,t){return M(this.url,this._normalizeQuery(r),t)}executeForExtent(r,t){return z(this.url,this._normalizeQuery(r),t)}executeForIds(r,t){return $(this.url,this._normalizeQuery(r),t)}async executeRelationshipQuery(r,t){const[{default:e},{executeRelationshipQuery:s}]=await l(Promise.all([n(()=>import("./index-B9tlkxep.js").then(o=>o.uy),__vite__mapDeps([1,2,3])),n(()=>import("./executeRelationshipQuery-x5mw3Ct9.js"),__vite__mapDeps([30,1,2,3,31,32,33,34,35,36,37]))]),t);return r=e.from(r),(this.gdbVersion||this.dynamicDataSource)&&((r=r.clone()).gdbVersion=r.gdbVersion||this.gdbVersion,r.dynamicDataSource=r.dynamicDataSource||this.dynamicDataSource),s(this.url,r,t)}async executeRelationshipQueryForCount(r,t){const[{default:e},{executeRelationshipQueryForCount:s}]=await l(Promise.all([n(()=>import("./index-B9tlkxep.js").then(o=>o.uy),__vite__mapDeps([1,2,3])),n(()=>import("./executeRelationshipQuery-x5mw3Ct9.js"),__vite__mapDeps([30,1,2,3,31,32,33,34,35,36,37]))]),t);return r=e.from(r),(this.gdbVersion||this.dynamicDataSource)&&((r=r.clone()).gdbVersion=r.gdbVersion||this.gdbVersion,r.dynamicDataSource=r.dynamicDataSource||this.dynamicDataSource),s(this.url,r,t)}async executeAttachmentQuery(r,t){const{executeAttachmentQuery:e,fetchAttachments:s,processAttachmentQueryResult:o}=await l(n(()=>import("./queryAttachments-CXSGqON1.js"),__vite__mapDeps([38,1,2,3,31,32,33,34,35,36,37,39])),t),i=f(this.url);return o(i,await(this.queryAttachmentsSupported?e(i,r,t):s(i,r,t)))}async executeAttributeBinsQuery(r,t){const{executeAttributeBinsQuery:e}=await l(n(()=>import("./executeAttributeBinsQuery-CqXXemtQ.js"),__vite__mapDeps([40,1,2,3,31,32,33,34,35,36,37,41,42,43,44,45])),t);return e(this.parsedUrl,r,t)}async executeTopFeaturesQuery(r,t){const{executeTopFeaturesQuery:e}=await l(n(()=>import("./executeTopFeaturesQuery-iT7q15EW.js"),__vite__mapDeps([46,1,2,3,47,31,32,33,34,35,36,37,48])),t);return e(this.parsedUrl,r,this.sourceSpatialReference,t)}async executeForTopIds(r,t){const{executeForTopIds:e}=await l(n(()=>import("./executeForTopIds-qd39Iab3.js"),__vite__mapDeps([49,1,2,3,47,31,32,33,34,35,36,37,48])),t);return e(this.parsedUrl,r,t)}async executeForTopExtents(r,t){const{executeForTopExtents:e}=await l(n(()=>import("./executeForTopExtents-DFcNdQ7K.js"),__vite__mapDeps([50,1,2,3,47,31,32,33,34,35,36,37,48])),t);return e(this.parsedUrl,r,t)}async executeForTopCount(r,t){const{executeForTopCount:e}=await l(n(()=>import("./executeForTopCount-DpEz3dGl.js"),__vite__mapDeps([51,1,2,3,47,31,32,33,34,35,36,37,48])),t);return e(this.parsedUrl,r,t)}_normalizeQuery(r){let t=m.from(r);t.sourceSpatialReference=t.sourceSpatialReference||this.sourceSpatialReference,(this.gdbVersion||this.dynamicDataSource)&&(t=t===r?t.clone():t,t.gdbVersion=r.gdbVersion||this.gdbVersion,t.dynamicDataSource=r.dynamicDataSource?g.from(r.dynamicDataSource):this.dynamicDataSource);const{infoFor3D:e}=this;if(e!=null&&this._queryIs3DObjectFormat(r)){if(t=t===r?t.clone():t,t.formatOf3DObjects=E(e),!t.formatOf3DObjects)throw new y("query:unsupported-3d-query-formats","Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf");if(t.outSpatialReference&&!L(t.outSpatialReference,this.sourceSpatialReference))throw new y("query:unsupported-out-spatial-reference","3D object feature services do not support projection of geometries");if(t.outFields==null||!t.outFields.includes("*")){t=t===r?t.clone():t,t.outFields==null&&(t.outFields=[]);const{originX:s,originY:o,originZ:i,translationX:u,translationY:d,translationZ:S,scaleX:D,scaleY:P,scaleZ:b,rotationX:F,rotationY:R,rotationZ:v,rotationDeg:C}=e.transformFieldRoles;t.outFields.push(s,o,i,u,d,S,D,P,b,F,R,v,C)}}return t}_normalizeFields(r){if(this.fieldsIndex!=null&&r!=null)for(const t of r){const e=this.fieldsIndex.get(t.name);e&&Object.assign(t,e.toJSON())}}_queryIs3DObjectFormat(r){return this.infoFor3D!=null&&r.returnGeometry===!0&&r.multipatchOption!=="xyFootprint"&&!r.outStatistics}};c([h({type:g})],a.prototype,"dynamicDataSource",void 0),c([h()],a.prototype,"fieldsIndex",void 0),c([h()],a.prototype,"gdbVersion",void 0),c([h()],a.prototype,"infoFor3D",void 0),c([h({readOnly:!0})],a.prototype,"parsedUrl",null),c([h()],a.prototype,"pbfSupported",void 0),c([h()],a.prototype,"queryAttachmentsSupported",void 0),c([h()],a.prototype,"sourceSpatialReference",void 0),c([h({type:String})],a.prototype,"url",void 0),a=c([Q("esri.layers.graphics.sources.support.QueryTask")],a);const st=a;export{st as F};
