const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/geometryEngineAsync-CvJcOsVJ.js","assets/index-B9tlkxep.js","assets/vendor-0HVaVRtn.js","assets/index-CDFczaSZ.css"])))=>i.map(i=>d[i]);
import{s as d,cd as mt,O as qe,M as pt,R as Ue,Q as dt,P as yt,a_ as B,cN as ft,T as Ze,a0 as w,a1 as S,a2 as M,aW as ht,oZ as We,o_ as P,gA as gt,ej as wt,ch as Ft,G as St,bu as N,bv as C,o$ as vt,p0 as xt,p1 as Vt,A as V,ek as qt,ma as Lt,p2 as zt,m9 as _t,io as Se,p3 as He,ab as Tt,p4 as A,e7 as Le,_ as bt,bw as Et,p5 as k,aJ as $t,p6 as Ct,p7 as Q,fW as Nt,ee as Ke,a8 as ze,p8 as Mt}from"./index-B9tlkxep.js";import{F as de,U as q,N as le,b as Pe,T as It,M as Ot}from"./utils-Bu3Wmiwk.js";import{d as At,c as kt,j as _e,m as ge,q as Xe,C as ue,$ as ce,P as Ye,a as Pt,n as Bt}from"./utils-CeWc9lgz.js";import{a as Qt}from"./executeQueryJSON-D39XH0bW.js";import"./pbf-CwrvXk2T.js";import{s as Rt}from"./quantizationUtils-T7qneWuZ.js";import{summaryStatistics as R,uniqueValues as Te,histogram as me,classBreaks as be,heatmapStatistics as Gt}from"./statsWorker-BO1hkvI_.js";import Dt from"./AttributeBinsQuery-CkPhN4A_.js";import{u as Jt,c as jt,m as Ut,a as Zt}from"./FixedIntervalBinParameters-DXnfMIQo.js";import"./vendor-0HVaVRtn.js";import"./ClassBreaksDefinition-b8HhHfP8.js";import"./query-COrFWVdl.js";import"./pbfQueryUtils-DiB9ezXP.js";import"./OptimizedGeometry-3yaiiwEe.js";import"./memoryEstimations-CfiaYUy-.js";import"./OptimizedFeature-BRI6IeKu.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./queryUtils-BcySug-I.js";import"./json-Wa8cmqdu.js";function Wt(e,t){if(!e.view)throw new d(`${t}:missing-parameters`,"'view' parameter is required for binning");if(e.sqlExpression)throw new d(`${t}:invalid-parameters`,"'sqlExpression' parameter is not supported for binning");if(e.view.type==="3d")throw new d(`${t}:invalid-parameters`,"3d view is not supported for binning")}let te=class U{constructor(){this.connection=null}async open(t){this.connection=await mt("statsWorker",{strategy:"distributed",signal:t})}destroy(){this.connection?.close()}static getInstance(){return U.instance||(U.instance=new U),U.instance}async summaryStatistics(t,a){if(!this.connection)throw new d("worker-client:summary-statistics","connection is required");return this.connection.invoke("summaryStatistics",{attribute:t,features:a})}async uniqueValues(t,a){if(!this.connection)throw new d("worker-client:unique-values","connection is required");return this.connection.invoke("uniqueValues",{attribute:t,features:a})}async classBreaks(t,a){if(!this.connection)throw new d("worker-client:class-breaks","connection is required");return this.connection.invoke("classBreaks",{attribute:t,features:a})}async histogram(t,a){if(!this.connection)throw new d("worker-client:histogram","connection is required");return this.connection.invoke("histogram",{attribute:t,features:a})}async heatmapStatistics(t,a){if(!this.connection)throw new d("worker-client:heatmap-statistics","connection is required");return this.connection.invoke("heatmapStatistics",{attribute:t,features:a})}};async function Ht(e,t,a,i){return Xt(t,await Kt(e,t,a,i))}async function Kt(e,t,a,i){const r={...i},s=Yt(t,a),l=t.outStatistics?.[0]!=null,n=pt("featurelayer-pbf-statistics"),o=!l||n;let u;return o||(u=await Qt(e,s,r)),a?.fieldsIndex,u.fields,u}async function Xt(e,t,a,i){return qe.fromJSON(t)}function Yt(e,t){let a=Ue.from(e);return a.sourceSpatialReference=a.sourceSpatialReference??t?.sourceSpatialReference??null,a}async function ea(e,t,a,i){const r=dt(e),{source:s,checkValueRange:l}=t,{classificationDefinition:n}=a,o={...a.toJSON(),f:"json"};let u=null;if(u=n?.type==="class-breaks-definition"?n.classificationField:n?.attributeField,s){const y={source:s?.toJSON()};o.layer=JSON.stringify(y)}o.classificationDef&&(o.classificationDef=JSON.stringify(o.classificationDef));let c={query:o};i&&(c={...i,...c});const m={url:r.path,field:u,checkValueRange:l},p=r.path+"/generateRenderer";return yt(p,c).then(y=>ta(m,y))}function ta(e,t){const{field:a,checkValueRange:i,url:r}=e,s=t?.data;if(!s)return;if(!i){const u=Be(s);return Promise.resolve(u)}const l=new B({statisticType:"min",onStatisticField:a}),n=new B({statisticType:"max",onStatisticField:a}),o=new Ue({outStatistics:[l,n]});return Ht(r,o).then(u=>{const c=u.features[0].attributes;let m=null,p=null;for(const y in c)y.toLowerCase().indexOf("min")===0?m=c[y]:p=c[y];return Be(s,m,p)})}function Be(e,t,a){if(e.type==="classBreaks"){const r=ft(e);return{classBreaks:r.classBreakInfos.map((s,l)=>(l===0&&t!=null&&(s.minValue=t),l===r.classBreakInfos.length-1&&a!=null&&(s.maxValue=a),{minValue:s.minValue,maxValue:s.maxValue,label:s.label})),normalizationTotal:r.normalizationTotal}}const{uniqueValueInfos:i}=e;return{uniqueValues:i?.map((r,s)=>(s===0&&t!=null&&(r.value=t),s===i.length-1&&a!=null&&(r.value=a),{count:r.count,value:r.value,label:r.label}))??[]}}let Z=class extends Ze{constructor(e){super(e),this.classificationDefinition=null,this.where=null}};w([S({json:{name:"classificationDef",write:!0}})],Z.prototype,"classificationDefinition",void 0),w([S({type:String,json:{write:!0}})],Z.prototype,"where",void 0),Z=w([M("esri.rest.support.GenerateRendererParameters")],Z);const ve=Z;let I=class extends Ze{constructor(t){super(t),this.type="unique-value-definition",this.attributeField=null,this.attributeField2=null,this.attributeField3=null,this.fieldDelimiter=null}get uniqueValueFields(){const t=[];return this.attributeField&&t.push(this.attributeField),this.attributeField2&&t.push(this.attributeField2),this.attributeField3&&t.push(this.attributeField3),t}};w([ht({uniqueValueDef:"unique-value-definition"})],I.prototype,"type",void 0),w([S()],I.prototype,"attributeField",void 0),w([S()],I.prototype,"attributeField2",void 0),w([S()],I.prototype,"attributeField3",void 0),w([S({json:{write:!0}})],I.prototype,"fieldDelimiter",void 0),w([S({json:{write:!0}})],I.prototype,"uniqueValueFields",null),I=w([M("esri.rest.support.UniqueValueDefinition")],I);const aa=I,et="no_dominant_category";function ra(e){return{expression:ia(e,{defaultValue:`'${et}'`})}}function ia(e,t){const{defaultValue:a,layer:i}=t,r=[];if(a){const s=e.map(l=>`${l} <= 0`).join(" AND ");r.push(`WHEN ${s} THEN ${a}`)}for(const s of e){const l=e.reduce((u,c)=>(s!==c&&u.push(`${s} > ${c}`),u),[]).join(" AND "),n=i&&We(i,s),o=`'${s}'`?`'${s}'`:n?P(s):s;r.push(`WHEN ${l} THEN ${o}`)}return`CASE ${r.join(" ")} ELSE ${a||"0"} END`}function sa(e){return e&&e.map(t=>`$feature["${t}"];`).join(`
`)+`
`||""}function na(e,t=!1){const a=e.map(r=>`"${r}"`);return`
  var fieldNames = [ ${a.join(", ")} ];
  var numFields = ${a.length};
  var maxValueField = null;
  var maxValue = -Infinity;
  var value, i, totalValue = null;

  for(i = 0; i < numFields; i++) {
    value = $feature[fieldNames[i]];

    if(value > 0) {
      if(value > maxValue) {
        maxValue = value;
        maxValueField = fieldNames[i];
      }
      else if (value == maxValue) {
        maxValueField = null;
      }
    }
    ${t?`
  if(value != null && value >= 0) {
    if (totalValue == null) { totalValue = 0; }
    totalValue = totalValue + value;
  }
  `:""}
  }
  `}function Ee(e){const t=na(e);return`
  ${sa(e)}
  ${t}
  return maxValueField;
  `}let b=class extends gt{constructor(t){super(t),this.adapterName="layer-adapter"}};w([S({readOnly:!0})],b.prototype,"adapterName",void 0),w([S({constructOnly:!0})],b.prototype,"layer",void 0),w([S()],b.prototype,"geometryType",void 0),w([S()],b.prototype,"objectIdField",void 0),w([S()],b.prototype,"supportsSQLExpression",void 0),w([S()],b.prototype,"hasQueryEngine",void 0),w([S()],b.prototype,"minScale",void 0),w([S()],b.prototype,"maxScale",void 0),w([S()],b.prototype,"fullExtent",void 0),b=w([M("esri.smartMapping.support.adapters.LayerAdapter")],b);const $e=b,oa=/_value$/i,la=Math.LOG10E,ua={SECOND:1e3,MINUTE:6e4,HOUR:36e5},Y=10;function ee(e){return e.map(t=>t.toJSON())}function Qe(e,t){const a=[],i=e.layer,r="featureReduction"in i?i.featureReduction:null,s=r?.type==="binning",l=r!=null&&"fields"in r?r.fields?.map(n=>n.name?.toLowerCase()).filter(Boolean):[];if(!s||!t)return a;for(const n of t)l.includes(n.toLowerCase())||a.push(n);return a}function pe(e,t,a){const i=[];if(t)for(const r of t){const s=e.getField(r);s&&a&&"availableFields"in a&&!a.availableFields?.includes(s.name)&&i.push(s.name)}return i}function Ce(e,t){const a=e&&e.features;if(a?.length===0)return{avg:null,count:0,max:null,median:null,min:null,nullcount:0,stddev:null,sum:null,variance:null};const i=a?.[0]?.attributes,r={};for(const s in i)r[s.replace(oa,"").toLowerCase()]=i[s];return r.totalcount!=null&&r.totalcount>=r.count&&(r.nullcount=r.totalcount-r.count),delete r.totalcount,r.min===r.max&&r.min!=null&&r.stddev==null&&(r.stddev=r.variance=0),t&&(["min","max","avg","stddev","sum","variance"].forEach(s=>{r[s]!=null&&(r[s]=Math.ceil(r[s]))}),r.min===r.max&&r.min!=null&&(r.avg=r.min,r.stddev=r.variance=0)),r}function ca(e){const t=[],a=e.classBreaks,i=a[0].minValue,r=a[a.length-1].maxValue;a.forEach(l=>{t.push([l.minValue,l.maxValue])});const s={field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,layer:e.layer};return{min:i,max:r,intervals:t,sqlExpr:G(s),excludeZerosExpr:e.where,normTotal:e.normalizationTotal}}function G(e){const{field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,layer:s}=e,l=We(s,t);let n=t;return a==="percent-of-total"?n=`((${l?P(t):t} / ${r}) * 100)`:a==="log"?n=`(log(${t}) * ${la})`:a==="field"?n=`(${l?P(t):t} / ${i})`:a==="natural-log"?n=`(log(${l?P(t):t}))`:a==="square-root"&&(n=`(power(${l?P(t):t}, 0.5))`),n}function tt(e,t){let a;if(t=t.toLowerCase(),e){for(const i in e)if(i.toLowerCase()!==t){a=e[i];break}}return a}function W(e,t){let a;if(t=t.toLowerCase(),e){for(const i in e)if(i.toLowerCase()===t){a=e[i];break}}return a}function at(e,t,a,i,r){const s={},l="countOFExpr";e&&e.features&&e.features.forEach(o=>{const u=o.attributes,c=tt(u,l),m=W(u,l);c!=null&&m!=null&&c!==0&&(s[c]=m)});const n=[];return _e(t,a,i).forEach((o,u)=>{const c=(u+1).toString();n.push({minValue:o[0],maxValue:o[1],count:s.hasOwnProperty(c)?s[c]:0})}),{bins:n,minValue:t,maxValue:a,normalizationTotal:r}}async function Ne(e,t){const a=e&&e.features,{field:i,field2:r,field3:s,fieldDelimiter:l,layer:n,view:o,signal:u,labels:c}=t,m=`countOF${(!i||!r)&&i||"Expr"}`,p={};let y=!1;for(const h of a){const g=h.attributes,v=W(g,m);let F=i?W(g,i):tt(g,m),x=r?W(g,r):null,L=s?W(g,s):null;F===null&&v===0&&(y=!0),(F==null||typeof F=="string"&&F.trim()==="")&&(F=null),r&&(x==null||typeof x=="string"&&x.trim()==="")&&(x=null),s&&(L==null||typeof L=="string"&&L.trim()==="")&&(L=null);let z=F;r&&(z=`${ge(z)}${l}${ge(x)}`,s&&(z=`${z}${l}${ge(L)}`)),p[z]==null?p[z]={count:v,data:z}:p[z].count=p[z].count+v}if(i&&y){const h=i+" is NULL";try{const g=await n.queryFeatureCount({whereClause:h,view:o,signal:u});return p.null.count=p.null.count+g,we(p,c)}catch{return V(u),we(p,c)}}return we(p,c)}function we(e,t){if(t)for(const a in e)e[a].label=t[a];return{count:e}}async function Fe(e,t,a){const i=e?a.getField(e):null,r=i?a.getFieldDomain(i.name):null;if(r)return r;const{uniqueValueInfos:s}=await a.uniqueValues({field:e,sqlWhere:t.sqlWhere,features:t.features,useFeaturesInView:t.useFeaturesInView,view:t.view,signal:t.signal}),l=s.map(n=>new vt({code:n.value}));return new xt({codedValues:l})}async function ye(e,t){if(!e.returnAllCodedValues)return[];const{field:a,field2:i,field3:r}=e;if(a&&!i){const l=a?t.getField(a):null,n=l?t.getFieldDomain(l.name):null;return n?[n]:[]}const s=[];return a&&(s.push(Fe(a,e,t)),i&&(s.push(Fe(i,e,t)),r&&s.push(Fe(r,e,t)))),Promise.all(s)}function ma(e,t){return Vt(e,new Date(0),t,"milliseconds").sqlExpression}function pa(e,t){return`EXTRACT(${t} FROM ${e}) * ${ua[t]}`}function da(e){return e?P(["HOUR","MINUTE","SECOND"].map(t=>`(${pa(e,t)})`).join(" + ")):null}function E(e){return{viewingMode:e.type==="2d"?"map":e.viewingMode,scale:e.scale,spatialReference:e.spatialReference?.toJSON()}}function Me(e,t){const a=new Set(e.map(r=>r.value)),i=t.filter(r=>!a.has(r));for(const r of i)e.push({value:r,count:0});e.sort((r,s)=>t.indexOf(r.value)-t.indexOf(s.value));for(const r of e)r.value===et&&(r.value=null);return{predominantCategoryInfos:e}}function Re(e){const t="featureReduction"in e?e.featureReduction:null;return((t!=null&&"fields"in t?t.fields:null)??[]).map(a=>{const i=ya(a,e.fieldsIndex);return i?new Ft({type:i,name:a.name,alias:a.alias}):null}).filter(St)}function ya(e,t){switch(e.statisticType){case"avg":case"avg_angle":return"double";case"count":return"integer";case"min":case"max":case"sum":return e.onStatisticField?t.get(e.onStatisticField)?.type??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?null:"double":null;case"mode":return e.onStatisticField?t.get(e.onStatisticField)?.type??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?"string":"double":null;default:return null}}function rt(e,t){return N(t)?ma(e,t?.name):C(t)?da(t?.name):null}function Ie(e,t,a){const{field:i,normalizationType:r,normalizationField:s,normalizationTotal:l,minValue:n,maxValue:o,filter:u}=t,c=e.supportsSQLExpression?rt(e,a)||t.sqlExpression:null,m=G({field:i,normalizationType:r,normalizationField:s,normalizationTotal:l,layer:e}),p=c||m,y=p?le(p,n,o):null,h=de({field:i,normalizationField:s,normalizationType:r}),g=q(t.sqlWhere,h),v=q(g,y),F=At({normalizationField:s,normalizationType:r,sqlExpression:c,supportsSQLExpression:e.supportsSQLExpression,minValue:n,maxValue:o}),x=wt(e.getField(i??void 0)),{include:L,exclude:z}=t.outStatisticTypes||{},fe=kt.filter(T=>(!L||L.includes(T))&&(!z||!z.includes(T))&&(T==="nullcount"?F:!x||T==="count")),O=e.createQuery();return O.where=q(O.where,v),O.sqlFormat=c?"standard":null,O.outStatistics=fe.map(T=>{const D=new B;let J=null,j=null,ke=`${T}_value`;if(T==="variance")J="var",j=p;else if(T==="nullcount"){const he=e.objectIdField;J="count",j=he&&e.getField(he)?he:"1",ke="totalcount_value"}else T==="median"?(J="percentile-continuous",j=p,D.statisticParameters={value:.5}):(J=T,j=p);return D.statisticType=J,D.onStatisticField=j,D.outStatisticFieldName=ke,D}),$(O,u),O}function $(e,t){t&&(e.geometry=t.geometry,e.spatialRelationship=t.spatialRelationship)}function it(e,t){const{field:a,field2:i,field3:r,sqlExpression:s}=t,l=!(!a||!i),n=e.createQuery();return n.where=q(n.where,t.sqlWhere),n.sqlFormat=s?"standard":null,n.outStatistics=[fa(l?null:a,l?"1":s)].filter(Boolean),n.groupByFieldsForStatistics=[a||s,i,r].filter(Boolean),$(n,t.filter),n}function fa(e,t){const a="countOF"+(e||"Expr"),i=new B;return i.statisticType="count",i.onStatisticField=t?"1":e,i.outStatisticFieldName=a,i}function re(e,t,a,i=Y,r,s,l){const{min:n,max:o,normTotal:u,excludeZerosExpr:c}=t,m=t.intervals||_e(n,o,i),p=t.sqlExpr||a;return ha(e,m,p,c,r,s,l).then(y=>({bins:y.map((h,g)=>({minValue:m[g][0],maxValue:m[g][1],count:h.status==="fulfilled"?h.value:0})),minValue:n,maxValue:o,normalizationTotal:u}))}function ha(e,t,a,i,r,s,l){const n=[],o=t.length;for(let u=0;u<o;u++){const c=q(i,q(a+" >= "+t[u][0],t[u][1]!==null?a+(u===o-1?" <= ":" < ")+t[u][1]:""));n.push(c)}return Promise.allSettled(n.map(u=>e.queryFeatureCount({whereClause:u,view:r,filter:s,signal:l})))}const st="countOFExpr",ga="lowerBoundary",wa="upperBoundary";function nt(e,t,a){const i=e.valueExpression||e.sqlExpression,r=e.signal;if(!i){const{field:s,normalizationType:l,normalizationField:n}=e,o=s?t.getField(s):null,u=N(o)||C(o);return{sqlExpression:u?rt(t,o):G({field:s,normalizationType:l,normalizationField:n,normalizationTotal:a,layer:t}),sqlWhere:u?null:e.sqlWhere||de({field:s,normalizationType:l,normalizationField:n}),filter:e.filter,signal:r}}return{valueExpression:e.valueExpression,sqlExpression:e.sqlExpression,sqlWhere:e.sqlWhere,filter:e.filter,signal:r}}async function xe(e,t,a){const{field:i,normalizationType:r,normalizationField:s,signal:l}=e,n=de({field:i,normalizationType:r,normalizationField:s}),o=new ve({classificationDefinition:Xe({field:i,normalizationType:r,normalizationField:s,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,definedInterval:e.definedInterval,breakCount:e.numBins||Y}),where:q(n,a)});return t.generateRenderer(o,l).then(u=>{const{normalizationTotal:c,classBreaks:m}=u;return ca({field:i,normalizationType:r,normalizationField:s,normalizationTotal:c,classBreaks:m,where:n,layer:t})})}async function Fa(e,t,a,i,r){const{field:s,sqlExpression:l,normalizationField:n,classificationMethod:o,normalizationType:u}=e,c=s?t.getField(s):null,m=C(c),p=_t(c)||m,y=e.numBins||Y;if(p){if(u||o)throw new d(`${t.adapterName}:not-supported`,"NormalizationType and classificationMethod are not supported for date-only and time-only fields");const h=(i-a)/y/1e3,g=h/86400;return new Jt({field:s,expression:l,interval:{unit:m?"seconds":"days",value:Math.ceil(m?h:g)},start:a,end:i})}if(o==="defined-interval")return new jt({field:s,expression:l,normalizationField:n,normalizationTotal:r,normalizationType:u,interval:e.definedInterval??Math.ceil((i-a)/y),start:u?null:a,end:u?null:i,normalizationMinValue:u?a:null,normalizationMaxValue:u?i:null});if(o==="manual")throw new d(`${t.adapterName}:not-supported`,"Layer does not support manual classificationMethod");if(o==="natural-breaks"||o==="quantile"||o==="standard-deviation"){const h=G({field:s,normalizationField:n,normalizationTotal:r,normalizationType:u,layer:t}),g=e.minValue!==null&&e.maxValue!==null?le(h,e.minValue,e.maxValue):void 0,v=await xe(e,t,g);if(!v.intervals)throw new d(`${t.adapterName}:invalid`,"Invalid intervals returned from generate renderer");const F=[a,...v.intervals.map(x=>x[1])];return new Ut({field:u?null:s,expression:u?h:l,boundaries:F})}return new Zt({field:s,normalizationField:n,normalizationTotal:r,normalizationType:u,expression:l,numBins:y,start:u?null:a,end:u?null:i,normalizationMinValue:u?a:null,normalizationMaxValue:u?i:null})}function ot(e,t,a,i){return a!=null&&i!=null?Promise.resolve({min:a,max:i}):t.summaryStatistics({...e,outStatisticTypes:{include:["min","max"]}}).then(r=>({min:r.min,max:r.max}))}async function lt(e,t,a,i){const{field:r,minValue:s,maxValue:l,filter:n,view:o}=e,u=r?t.getField(r):null,c=qt(u)||Lt(u),m=nt(e,t,a),{min:p,max:y}=await ot(m,t,s,l);if(p==null||y==null)return{query:null,min:p,max:y};const h=new B({statisticType:"count",outStatisticFieldName:st,onStatisticField:"1"}),g=q(i,m.sqlWhere),v="lowerBoundary",F="upperBoundary",x=new Dt({binParameters:await Fa(e,t,p,y,a),outStatistics:[h],binOrder:e.sortOrder,where:g,lowerBoundaryAlias:v,upperBoundaryAlias:F,outTimeZone:o?.timeZone&&c?zt(o.timeZone):null});return $(x,n),{query:x,min:p,max:y}}function Ge(e,t=!1){return typeof e!="string"?e:(t?new Date(`1970-01-01T${e}Z`):new Date(e)).getTime()}function ut(e,t,a){const i=C(t);return{...a,bins:e.features.map(r=>({minValue:Ge(r.attributes[ga],i),maxValue:Ge(r.attributes[wa],i),count:r.attributes[st]}))}}function De(e,t,a){const{valueExpression:i,view:r}=e,{featuresJSON:s,graphics:l,fieldInfos:n}=t,o={field:e.field,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:a,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return i&&r&&(s||l)&&(o.viewInfoParams=E(r),o.timeZone=r.timeZone,o.fieldInfos=n),o}const Sa=5;let ae=null,H=class extends $e{constructor(){super(...arguments),this._hasLocalSource=!1,this.adapterName="in-memory-layer-adapter"}destroy(){this.workerClient?.destroy()}async _waitForLayerViewUpdate(e){if(!e)throw new d(`${this.adapterName}:insufficient-data", "layerView is required to fetch the features`);const t=new AbortController,a=Se(()=>!e.updating,t.signal);await He(a,5e3,t).catch(i=>{throw Tt.getLogger(this).warn("LayerView is taking too long to update. Aborting fetch from layerView."),i})}async _fetchFeatureSetFromMemory(e,t,a){const i=this.layer;if(this._hasLocalSource&&"queryFeatures"in i)return i.queryFeatures(e);if(!t)throw new d(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const r=await t.whenLayerView(this.layer);return await this._waitForLayerViewUpdate(r),r.queryFeatures(e,{signal:a})}async _fetchFeaturesFromMemory(e,t,a,i){const r=this.layer,s=i==="json";if(this._hasLocalSource&&"queryFeatures"in r){const n=await r.queryFeatures(t);return s?ee(n.features):n.features}if(await this._waitForLayerViewUpdate(e),s&&"queryFeaturesJSON"in e&&e.queryFeaturesJSON){const{features:n}=await e.queryFeaturesJSON(t,{signal:a});return n}if(!("queryFeatures"in e))throw new d(`${this.adapterName}:not-supported`,"'queryFeatures' is not supported on the layerView");const l=await e.queryFeatures(t,{signal:a});return s?ee(l.features):l.features}_fetchFeaturesForStats(e,t){return A({field:e.field,field2:e.field2,field3:e.field3,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,filter:e.filter,requiredFields:a,signal:e.signal},t))}async _summaryStatsFromClientQuery(e,t){const{view:a,signal:i}=e,r=Ie(this,e,t),s=await this._fetchFeatureSetFromMemory(r,a,i),l=Ce(s,N(t)||C(t));return ue(l,e.outStatisticTypes)}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:i,graphics:r,layerView:s,query:l}=t,n={include:["sum"]},o=(!i&&!r&&s&&"querySummaryStatistics"in s?await s.querySummaryStatistics(l,{field:e},{signal:a}):i?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:n},i):await R({attribute:{field:e,outStatisticTypes:n},features:r??[]})).sum;if(o==null)throw new d(`${this.adapterName}:invalid`,"invalid normalizationTotal");return o}async _summaryStatsFromMemory(e,t){const{view:a,field:i,valueExpression:r,normalizationType:s,signal:l}=e,n={field:i,valueExpression:r,normalizationType:s,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:o,graphics:u,layerView:c,query:m,fieldInfos:p}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"querySummaryStatistics"});return r&&a&&(o||u)&&(n.fieldType=t?.type?Le.toJSON(t.type):null,n.viewInfoParams=E(a),n.timeZone=a.timeZone,n.fieldInfos=p),s==="percent-of-total"&&e.normalizationTotal==null&&(n.normalizationTotal=await this._getNormalizationTotalFromMemory(i,{featuresJSON:o,graphics:u,layerView:c,query:m},l)),!o&&!u&&c&&"querySummaryStatistics"in c?c.querySummaryStatistics(m,n,{signal:l}):o?this.workerClient.summaryStatistics(n,o):R({attribute:n,features:u})}async _getFilteredFeatures(e,t){let a=[];if(t?.spatialRelationship==="intersects"){const{intersect:i}=await bt(()=>import("./geometryEngineAsync-CvJcOsVJ.js"),__vite__mapDeps([0,1,2,3])),r=t.geometry!=null?t.geometry:null;for(const s of e){const l=s.geometry!=null?s.geometry:null;l&&r&&await i(l,r)&&a.push(s)}}else a=e;return e.length&&"declaredClass"in e[0]&&e[0].declaredClass==="esri.Graphic"?{graphics:a}:{featuresJSON:a}}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t?.length)return this._getFilteredFeatures(t,a);const{view:i,field:r,field2:s,field3:l,normalizationField:n,valueExpression:o,layerViewFunc:u,signal:c}=e;let m=e.returnGeometry;if(m==null&&o){if(!ae){const{arcadeUtils:x}=await Et();ae=x}const F=ae.hasGeometryOperations(o);F&&await ae.enableGeometryOperations(),m=F}let p=null,y=null,h=null,g=null,v=null;if(i)try{const F=this.layer.type==="subtype-sublayer"?this.layer.parent:this.layer;p=await i.whenLayerView(F),y=u!=null&&u in p&&typeof p[u]=="function"}catch{y=!1}if(y)try{await this._waitForLayerViewUpdate(p);const F=await A({field:r,field2:s,field3:l,normalizationField:n,valueExpression:o});pe(this,F,p).length?y=!1:(h=this.layer.createQuery(),h.outFields=F,h.returnGeometry=!1,$(h,a)),p.suspended&&(y=!1)}catch{y=!1}return y||(g=await this._fetchFeaturesForStats({field:r,field2:s,field3:l,valueExpression:o,normalizationField:n,returnGeometry:m,filter:a,view:i,signal:c},"json"),v=(await A({valueExpression:o})).map(F=>this.getField(F)?.toJSON()).filter(Boolean)),{layerView:p,query:h,featuresJSON:g,fieldInfos:v}}async _uvFromClientQuery(e,t){const{view:a,signal:i}=e,r=it(this,e),s=await this._fetchFeatureSetFromMemory(r,a,i),l=await Ne(s,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:k,view:e.view,signal:e.signal});return ce(l,t,e.returnAllCodedValues,k)}async _uvFromMemory(e,t){const{view:a,field:i,valueExpression:r,returnAllCodedValues:s,signal:l}=e,{featuresJSON:n,graphics:o,layerView:u,query:c,fieldInfos:m}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryUniqueValues"}),p={field:i,field2:e.field2,field3:e.field3,fieldDelimiter:k,valueExpression:r,domains:t,returnAllCodedValues:s};return r&&a&&(n||o)&&(p.viewInfoParams=E(a),p.timeZone=a.timeZone,p.fieldInfos=m),!n&&!o&&u&&"queryUniqueValues"in u?u.queryUniqueValues(c,p,{signal:l}):n?this.workerClient.uniqueValues(p,n):Te({attribute:p,features:o})}_histogramForField(e){let t=null;return t=e.minValue!=null&&e.maxValue!=null?Promise.resolve({min:e.minValue,max:e.maxValue}):this.summaryStatistics({...e,outStatisticTypes:{include:["min","max","count"]}}).then(a=>{if(!a.count)throw new d(`${this.adapterName}:insufficient-data`,"Either the layer has no features or none of the features have data for the field");return{min:a.min,max:a.max}}),t.then(a=>re(this,{min:a.min,max:a.max},e.field,e.numBins??void 0,e.view,e.filter,e.signal))}async _histogramFromQueryAttributeBinsFromMemory(e){const{field:t,normalizationType:a,signal:i}=e,r=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAttributeBins"}),{featuresJSON:s,graphics:l,layerView:n,query:o}=r,u=a==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,r,i):void 0;if(!n||!("queryAttributeBins"in n)||s||l){const h=De(e,r,u);return s?this.workerClient.histogram(h,s):me({attribute:h,features:l})}const{query:c,min:m,max:p}=await lt(e,this,u,o?.where);if(!c)return{bins:[],minValue:m,maxValue:p,normalizationTotal:u};const y=await n.queryAttributeBins(c,{signal:i});return ut(y,t?this.getField(t):null,{minValue:m,maxValue:p,normalizationTotal:u})}async _histogramFromMemory(e){const{field:t,signal:a}=e,i=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryHistogram"}),{featuresJSON:r,graphics:s,layerView:l,query:n}=i,o=e.normalizationType==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,i,a):void 0,u=De(e,i,o);return!r&&!s&&l&&"queryHistogram"in l?l.queryHistogram(n,u,{signal:a}):r?this.workerClient.histogram(u,r):me({attribute:u,features:s})}_classBreaksFromInterpolation(e){const{minValue:t,maxValue:a}=e,i=e.numClasses||Sa,r=[],s=(a-t)/i;for(let o=0;o<i;o++){const u=t+o*s;r.push({minValue:u,maxValue:u+s})}r[i-1].maxValue=a;const l={classBreaks:r,normalizationTotal:e.normalizationTotal},n=Ye(l,e.classificationMethod);return Promise.resolve(n)}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:s,graphics:l,layerView:n,query:o,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryClassBreaks"}),c={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return i&&t&&(s||l)&&(c.viewInfoParams=E(t),c.timeZone=t.timeZone,c.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(c.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:l,layerView:n,query:o},r)),!s&&!l&&n&&"queryClassBreaks"in n?n.queryClassBreaks(o,c,{signal:r}):s?this.workerClient.classBreaks(c,s):be({attribute:c,features:l})}async _heatmapStatsFromMemory(e){const{view:t,field:a,radius:i,signal:r}=e;$t(t,"InMemoryLayerAdapter: must have a view");try{const u=await t.whenLayerView(this.layer);if("queryHeatmapStatistics"in u&&!u.updating&&!e.filter)return await u.queryHeatmapStatistics({field:e.field,radius:e.radius})}catch{V(r)}const{featuresJSON:s,graphics:l}=await this._processStatsFromMemoryParams({...e,returnGeometry:!0}),n=new Ct({extent:t.extent,tolerance:t.type==="2d"?t.state.resolution:t.pixelSizeAt?.(t.center)}),o={field:a,radius:i,transform:Rt(n),spatialReference:t.spatialReference?.toJSON(),size:t.size};return s?.length||l?.length?s?this.workerClient.heatmapStatistics(o,s):Gt({attribute:o,features:l}):{min:null,max:null}}getField(e=""){return this.layer.getField(e)}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!0,supportsStatistics:!0}:null}getFieldDomain(e,t){return this.layer.getFieldDomain(e,t)}createQuery(){return this.layer.createQuery()}async summaryStatistics(e){const{field:t,valueExpression:a,sqlExpression:i,features:r,view:s}=e,l=t?this.getField(t):null,n=!!a,o=s?.type==="3d";if(!a&&i&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return n||r||o?this._summaryStatsFromMemory(e,l):this._summaryStatsFromClientQuery(e,l)}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:i,view:r}=e,s=await ye(e,this),l=!!t,n=r?.type==="3d";if(!t&&a&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return l||i||n?this._uvFromMemory(e,s):this._uvFromClientQuery(e,s)}async histogram(e){const{features:t,valueExpression:a,normalizationType:i,sqlExpression:r}=e,s=t||!!a;if(!a&&r&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return s||i?this._histogramFromMemory(e):this._histogramForField(e)}async classBreaks(e){return e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)}async queryFeatureCount(e){const{whereClause:t,view:a,signal:i}=e;if(!a)throw new d(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const r=this.layer.createQuery();r.where=q(r.where,t);const s=await a.whenLayerView(this.layer);return await Se(()=>!s.updating,i),s.queryFeatureCount(r,{signal:i})}async generateRenderer(e,t){throw new d(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation")}async predominantCategories(e){const{fields:t,view:a,signal:i,filter:r}=e,s=Ee(t),l=await this._uvFromMemory({valueExpression:s,view:a,signal:i,filter:r});return Me(l.uniqueValueInfos,t)}async heatmapStatistics(e){return this._heatmapStatsFromMemory(e)}async getSampleFeatures(e,t){const{view:a,sampleSize:i,requiredFields:r,returnGeometry:s,filter:l,signal:n}=e,o=this.layer.createQuery(),u=1;if(o.outSpatialReference=a?.spatialReference,o.returnGeometry=!!s,o.outFields=r,$(o,l),!a)throw new d(`${this.adapterName}:not-supported`,"view is required to get sample features for Layer");const c=await a.whenLayerView(this.layer);if(pe(this,r,c).length)throw new d(`${this.adapterName}:not-supported`,"Required fields need to be passed in the outFields for Layer");const m=await this._fetchFeaturesFromMemory(c,o,n,t),p=i!=null&&i>0&&i<=m.length?i:m.length;return Q(m,p,u)}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=a.type==="stream"||!!a.capabilities?.query?.supportsSqlExpression,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent="fullExtent"in a?a.fullExtent:a.parent?.fullExtent,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=te.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};w([S({readOnly:!0})],H.prototype,"adapterName",void 0),w([S({constructOnly:!0})],H.prototype,"layer",void 0),H=w([M("esri.smartMapping.support.adapters.InMemoryLayerAdapter")],H);const Oe=H,Je=5,je=2e4,va=4e5;let K=class extends Oe{constructor(){super(...arguments),this.adapterName="feature-layer-adapter"}_isStatsSupportedOnService(){const e=this.layer;if(!e.capabilities?.query?.supportsStatistics||this.geometryType==="multipatch"&&!Nt(e.url)&&e.version<10.5)throw new d(`${this.adapterName}:not-supported`,"Layer does not support statistics query");return Promise.resolve()}_fetchFeaturesFromService(e,t){return this.layer.queryFeatures(e,{signal:t}).then(a=>a.features)}_fetchFeaturesJSONFromService(e,t){return this._fetchFeaturesFromService(e,t).then(ee)}_summaryStatsFromGenRend(e){const t=e.normalizationType,a=e.normalizationField;return this.classBreaks({field:e.field,numClasses:Je,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:t,normalizationField:t==="field"?a:void 0,minValue:e.minValue,maxValue:e.maxValue,filter:e.filter,signal:e.signal}).then(i=>{let r,s,l;if(i.classBreakInfos?.some(o=>(o.hasAvg&&(r=o),!!r)),r){const o=r.maxValue-r.minValue;s=r.minValue+o/2,l=4*o}const n={min:i.minValue,max:i.maxValue,avg:s,stddev:l};return ue(n,e.outStatisticTypes)})}async _summaryStatsFromServiceQuery(e,t){await this._isStatsSupportedOnService(),e.normalizationType==="percent-of-total"&&(e.normalizationTotal=await this._getNormalizationTotal(e.field,e.normalizationType,e.filter));const a=N(t)||C(t),i=Ie(this,e,t),r=await this.layer.queryFeatures(i,{signal:e.signal}),s=Ce(r,a);return ue(s,e.outStatisticTypes)}_uvFromGenRenderer(e,t){const a=e.field??void 0,i=new aa({attributeField:a}),r=new ve({classificationDefinition:i});return this.generateRenderer(r,e.signal).then(s=>{const l={},n=this.getField(a);return s.uniqueValues.forEach(o=>{let u=o.value;u!=null&&u!==""&&(typeof u!="string"||u.trim()!==""&&u.toLowerCase()!=="<null>")||(u=null),l[u]==null?l[u]={count:o.count,data:Ke(n)&&u?Number(u):u}:l[u].count=l[u].count+o.count}),{count:l}}).then(s=>ce(s,[t],e.returnAllCodedValues))}async _uvFromServiceQuery(e,t){return this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(it(this,e),{signal:e.signal})).then(a=>Ne(a,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:k,view:e.view,signal:e.signal})).then(a=>ce(a,t,e.returnAllCodedValues,k))}_getNormalizationTotal(e,t,a,i){return e&&t==="percent-of-total"?this.summaryStatistics({field:e,outStatisticTypes:{include:["sum"]},filter:a,signal:i}).then(r=>r.sum):Promise.resolve(null)}_histogramForExpr(e){return this._getNormalizationTotal(e.field,e.normalizationType,e.filter,e.signal).then(t=>{const a=nt(e,this,t);return ot(a,this,e.minValue,e.maxValue).then(i=>{const r=i.min,s=i.max;if(r==null||s==null)return{bins:[],minValue:r,maxValue:s,normalizationTotal:t};const l=e.numBins||Y,n=_e(r,s,l),o=xa(a.sqlExpression,n,e.minValue!=null&&e.maxValue!=null),u=new B({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),c=this.layer.createQuery();return c.where=q(c.where,a.sqlWhere),c.sqlFormat="standard",c.outStatistics=[u],c.groupByFieldsForStatistics=[o],c.orderByFields=[o],$(c,e.filter),this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(c,{signal:a.signal})).then(m=>at(m,r,s,l,t))})})}async _histogramFromQueryAttributeBins(e){const{field:t,normalizationType:a,filter:i,signal:r}=e,s=await this._getNormalizationTotal(t,a,i,r),l=this.layer.createQuery(),{query:n,min:o,max:u}=await lt(e,this,s,l?.where);if(!n)return{bins:[],minValue:o,maxValue:u,normalizationTotal:s};const c=await this.layer.queryAttributeBins(n,{signal:r});return ut(c,t?this.getField(t):null,{minValue:o,maxValue:u,normalizationTotal:s})}_classBreaksFromGenRend(e){const{field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,signal:s}=e,l=de({field:t,normalizationType:a,normalizationField:i}),n=G({field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,layer:this}),o=le(n,e.minValue,e.maxValue),u=Xe({field:t,normalizationType:a,normalizationField:i,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||Je}),c=new ve({classificationDefinition:u});return c.where=q(l,o),this.generateRenderer(c,s).then(m=>Ye(m,e.classificationMethod))}async summaryStatistics(e){const{field:t,normalizationType:a,valueExpression:i,sqlExpression:r,view:s,features:l,useFeaturesInView:n}=e,o=t?this.getField(t):null,u=N(o)||C(o),c=i&&!(r&&this.supportsSQLExpression),m=this._hasLocalSource||l||n,p=s&&s.type==="3d";if(m||c)return c||l||n||p?this._summaryStatsFromMemory(e,o):this._summaryStatsFromClientQuery(e,o);if(!this.supportsSQLExpression&&(u||r||a==="natural-log"||a==="square-root"))throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return(a&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(e):this._summaryStatsFromServiceQuery(e,o)).catch(()=>(V(e.signal),this._summaryStatsFromMemory(e,o)))}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:i,useFeaturesInView:r,signal:s}=e,l=t&&!(a&&this.supportsSQLExpression),n=this._hasLocalSource||i||r||l,o=e.view,u=o&&o.type==="3d",c=await ye(e,this);return n?l||i||r||u?this._uvFromMemory(e,c):this._uvFromClientQuery(e,c):this._uvFromServiceQuery(e,c).catch(m=>(V(s),!e.field||e.field2||e.field3||e.filter?m:this._uvFromGenRenderer(e,c[0]))).catch(()=>(V(s),u?this._uvFromMemory(e,c):this._uvFromClientQuery(e,c)))}async histogram(e){const{field:t,normalizationType:a,normalizationField:i,classificationMethod:r,view:s,filter:l,signal:n}=e,o=t?this.getField(t):null,u=N(o)||C(o),c=e.valueExpression||e.sqlExpression,m=e.valueExpression&&!(e.sqlExpression&&this.supportsSQLExpression),p=this._hasLocalSource||e.features||e.useFeaturesInView||m,y=this.supportsSQLExpression,h=!r||r==="equal-interval",g=e.minValue,v=e.maxValue,F=g!=null&&v!=null,x=e.numBins||Y;if(p)return this._histogramFromMemory(e);if(this.layer.capabilities?.operations?.supportsQueryBins&&e.useQueryAttributeBins)try{return await this._histogramFromQueryAttributeBins(e)}catch{return V(n),this._histogramFromQueryAttributeBinsFromMemory(e)}if((c||y)&&h){if(!y&&(c||a==="natural-log"||a==="square-root"))throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return this._histogramForExpr(e)}if(u&&h)throw new d(`${this.adapterName}:not-supported`,"Normalization and date field are not allowed when layer does not support standardized SQL expression for queries");return a||!h?xe(e,this).then(L=>{if(!F)return re(this,L,t,x,s,l,n);if(g>L.max||v<L.min)throw new d(`${this.adapterName}:insufficient-data`,"Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(h)return re(this,{min:g,max:v,sqlExpr:L.sqlExpr,excludeZerosExpr:L.excludeZerosExpr},t,x,s,l,n);{const z={field:t,normalizationType:a,normalizationField:i,normalizationTotal:L.normTotal,layer:this},fe=G(z),O=le(fe,g,v);return xe(e,this,O).then(T=>re(this,T,t,x,s,l,n))}}):this._histogramForField(e)}async classBreaks(e){const t=e.analyzeData!==!1,a=this._hasLocalSource||e.features||e.useFeaturesInView||e.valueExpression||e.filter;return t&&a?this._classBreaksFromMemory(e):(t?this._classBreaksFromGenRend(e):this._classBreaksFromInterpolation(e)).catch(()=>(V(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){if(this._hasLocalSource)throw new d(`${this.adapterName}:not-supported`,"Layer does not support count query");const t=this.layer,a=t.createQuery();return a.where=q(a.where,e.whereClause),$(a,e.filter),t.queryFeatureCount(a,{signal:e.signal})}async generateRenderer(e,t){const a=this.layer;if(this._hasLocalSource||a.version<10.1)throw new d(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)");const i=a.createQuery();return e.where=q(e.where,i.where),ea(a.parsedUrl?.path??"",{source:a.dynamicDataSource??void 0,gdbVersion:a.gdbVersion??void 0},e,{signal:t})}async predominantCategories(e){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support advanced SQL expressions and standardized queries");const{fields:t,view:a,signal:i,filter:r}=e,s=Ee(t),l=ra(t),n=a&&this._hasLocalSource?await this._uvFromMemory({valueExpression:s,view:a,signal:i,filter:r}):await this._uvFromServiceQuery({sqlExpression:l.expression,valueExpression:s,signal:i,filter:r});return Me(n.uniqueValueInfos,t)}async getSampleFeatures(e,t){const{view:a,requiredFields:i,returnGeometry:r,filter:s,signal:l}=e,n=e.sampleSize;if(n==null||n===0)return[];const o=this.layer.createQuery(),u=1,c=t==="json";o.outSpatialReference=a?.spatialReference,o.returnGeometry=!!r,o.outFields=i,$(o,s);let m=[],p=!1;if(a)try{const y=await a.whenLayerView(this.layer);if(p=!pe(this,i,y).length,p){if(n>=1&&!e.filter&&"getSampleFeatures"in y){await this._waitForLayerViewUpdate(y);const h=await y.getSampleFeatures({minFeatureCount:n,sampleSize:n});if(h!=null)return c?h:h.map(g=>ze.fromJSON(g))}if(m=await this._fetchFeaturesFromMemory(y,o,l,t),m.length>=n&&n>0)return Q(m,n,u)}}catch{V(l)}try{if(this._hasLocalSource)return p?m:c?await this._fetchFeaturesJSONFromService(o,l):await this._fetchFeaturesFromService(o,l);const y=await this.queryFeatureCount({view:a,filter:s,signal:l}),h=this.layer.capabilities.query.maxRecordCount;let g=n===-1?y:n;if(g=h&&g>h?h:g,y<=m.length||m.length>=h)return m;if(o.maxAllowableOffset=e.resolution||(a?a.extent.width/a.width/a.scale:Mt(this.layer.spatialReference))*va,y<=g)return c?await this._fetchFeaturesJSONFromService(o,l):await this._fetchFeaturesFromService(o,l);if(y<=je){const v=this.layer.createQuery();$(v,s);const F=await this.layer.queryObjectIds();return o.objectIds=Q(F,g,u),c?await this._fetchFeaturesJSONFromService(o,l):await this._fetchFeaturesFromService(o,l)}return this.layer.capabilities?.query?.supportsPagination&&(o.num=Math.min(g,je)),c?await this._fetchFeaturesJSONFromService(o,l):await this._fetchFeaturesFromService(o,l)}catch{return V(l),m}}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=a.capabilities?.query?.supportsSqlExpression,this._hasLocalSource=!a.url&&!!a.source,this.hasQueryEngine=this._hasLocalSource,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent,this.workerClient=te.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};function xa(e,t,a){const i=[],r=t.length;return t.forEach((s,l)=>{const[n,o]=s;let u=null;u=l!==0||a?l!==r-1||a?q(`${e} >= ${n}`,`${e} ${l===r-1?" <= ":" < "} ${o}`):`${e} >= ${n}`:`${e} < ${o}`,i.push("WHEN ("+u+") THEN "+(l+1))}),["CASE",i.join(" "),"ELSE 0","END"].join(" ")}w([S({readOnly:!0})],K.prototype,"adapterName",void 0),w([S({constructOnly:!0})],K.prototype,"layer",void 0),K=w([M("esri.smartMapping.support.adapters.FeatureLayerAdapter")],K);const _=K;let ie=class extends _{constructor(){super(...arguments),this.adapterName="csv-layer-adapter"}async _createGenerateRendererResult(t,a,i,r,s){const l=t?.features;if(!l?.length)throw new d("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");const o=ee(l);let u=null;if(r==="percent-of-total"&&(u=(await this.workerClient.summaryStatistics({field:a},o)).sum,u==null))throw new d("csv-layer-adapter:invalid","invalid normalizationTotal");if(s?.type==="class-breaks-definition"){const m=(await Pe({field:a,normalizationType:r,normalizationField:i,normalizationTotal:u},o)).filter(p=>Number.isFinite(p));return Pt({definition:s,values:m,normalizationTotal:u})}const c=(await Pe({field:a},o)).filter(m=>m!=null&&typeof m=="string"&&m.trim()!=="");return Bt(c)}generateRenderer(t,a){const i=t.classificationDefinition;let r=null,s=null,l=null;i?.type==="class-breaks-definition"?(r=i.classificationField,s=i.normalizationField,l=i.normalizationType):r=i?.attributeField;const n=this.layer;return A({field:r,normalizationField:s}).then(o=>{const u=n.createQuery();return u.returnGeometry=!1,u.outFields=o,u.where=q(u.where,t.where),n.queryFeatures(u,{signal:a}).then(c=>this._createGenerateRendererResult(c,r,s,l,i))})}load(t){const a=this.layer.load(t).then(async i=>{this.geometryType=i.geometryType,this.objectIdField=i.objectIdField,this.supportsSQLExpression=!0,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=te.getInstance(),await this.workerClient.open(t.signal)});return this.addResolvingPromise(a),Promise.resolve(this)}};w([S({readOnly:!0})],ie.prototype,"adapterName",void 0),ie=w([M("esri.smartMapping.support.adapters.CSVLayerAdapter")],ie);const Va=ie;let se=class extends _{constructor(){super(...arguments),this.adapterName="feature-layer-binning-adapter"}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:i,graphics:r,layerView:s,query:l}=t,n={include:["sum"]},o=(!i&&!r&&s&&"queryAggregateSummaryStatistics"in s?await s.queryAggregateSummaryStatistics(l,{field:e,outStatisticTypes:n},{signal:a}):i?await this.workerClient.summaryStatistics({field:e},i):await R({attribute:{field:e,outStatisticTypes:n},features:r})).sum;if(o==null)throw new d(`${this.adapterName}:invalid`,"invalid normalizationTotal");return o}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t?.length)return this._getFilteredFeatures(t,a);const{view:i,field:r,field2:s,field3:l,normalizationField:n,valueExpression:o,returnGeometry:u,layerViewFunc:c,signal:m}=e;let p=null,y=null,h=null,g=null,v=null;if(i)try{if(p=await i.whenLayerView(this.layer),y=c!=null&&c in p&&typeof p[c]=="function",y){await this._waitForLayerViewUpdate(p);const F=await A({field:r,field2:s,field3:l,normalizationField:n,valueExpression:o});Qe(this,F).length?y=!1:(h="createAggregateQuery"in p?p.createAggregateQuery():null,h?(h.outFields=F,h.returnGeometry=!1,$(h,a)):y=!1),p.suspended&&(y=!1)}}catch{y=!1}if(!y&&(v=Re(this.layer).map(F=>F.toJSON()),g=await this._fetchFeaturesForStats({field:r,field2:s,field3:l,valueExpression:o,normalizationField:n,returnGeometry:u,filter:a,view:i,signal:m},"json"),!g?.length))throw new d(`${this.adapterName}:insufficient-data`,"No features are available to calculate statistics");return{layerView:p,query:h,featuresJSON:g,fieldInfos:v}}async _summaryStatsFromMemory(e,t){const{view:a,field:i,valueExpression:r,normalizationType:s,signal:l}=e,n={field:i,valueExpression:r,normalizationType:s,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:o,graphics:u,layerView:c,query:m,fieldInfos:p}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateSummaryStatistics"});return r&&a&&(o||u)&&(n.fieldType=t?.type?Le.toJSON(t.type):null,n.viewInfoParams=E(a),n.timeZone=a.timeZone,n.fieldInfos=p),s==="percent-of-total"&&e.normalizationTotal==null&&(n.normalizationTotal=await this._getNormalizationTotalFromMemory(i,{featuresJSON:o,graphics:u,layerView:c,query:m},l)),!o&&!u&&c&&"queryAggregateSummaryStatistics"in c?c.queryAggregateSummaryStatistics(m,n,{signal:l}):o?this.workerClient.summaryStatistics(n,o):R({attribute:n,features:u})}async _uvFromMemory(e,t){const{view:a,field:i,valueExpression:r,returnAllCodedValues:s,signal:l}=e,{featuresJSON:n,graphics:o,layerView:u,query:c,fieldInfos:m}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateUniqueValues"}),p={field:i,field2:e.field2,field3:e.field3,fieldDelimiter:k,valueExpression:r,domains:t,returnAllCodedValues:s};return r&&a&&(n||o)&&(p.viewInfoParams=E(a),p.timeZone=a.timeZone,p.fieldInfos=m),!n&&!o&&u&&"queryAggregateUniqueValues"in u?u.queryAggregateUniqueValues(c,p,{signal:l}):n?this.workerClient.uniqueValues(p,n):Te({attribute:p,features:o})}async _histogramFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:s,graphics:l,layerView:n,query:o,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateHistogram"}),c={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return i&&t&&(s||l)&&(c.viewInfoParams=E(t),c.timeZone=t.timeZone,c.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(c.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:l,layerView:n,query:o},r)),!s&&!l&&n&&"queryAggregateHistogram"in n?n.queryAggregateHistogram(o,c,{signal:r}):s?this.workerClient.histogram(c,s):me({attribute:c,features:l})}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:s,graphics:l,layerView:n,query:o,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateClassBreaks"}),c={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return i&&t&&(s||l)&&(c.viewInfoParams=E(t),c.timeZone=t.timeZone,c.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(c.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:l,layerView:n,query:o},r)),!s&&!l&&n&&"queryAggregateClassBreaks"in n?n.queryAggregateClassBreaks(o,c,{signal:r}):s?this.workerClient.classBreaks(c,s):be({attribute:c,features:l})}getField(e=""){return Re(this.layer)?.find(a=>a.name.toLowerCase()===e?.toLowerCase())}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!1,supportsStatistics:!0}:null}getFieldDomain(e,t){return null}async summaryStatistics(e){const{field:t}=e,a=t?this.getField(t):null,i=N(a)||C(a),r=e.sqlExpression&&!e.valueExpression&&!t;if(i||r)throw new d(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._summaryStatsFromMemory(e,a)}async uniqueValues(e){const t=await ye(e,this);return this._uvFromMemory(e,t)}async histogram(e){const{field:t}=e,a=t?this.getField(t):null,i=N(a)||C(a),r=e.sqlExpression&&!e.valueExpression&&!t;if(i||r)throw new d(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._histogramFromMemory(e)}async classBreaks(e){return(e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)).catch(()=>(V(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){const t=await e.view?.whenLayerView(this.layer);if(!t||!("queryAggregateCount"in t)||!t.queryAggregateCount)throw new d(`${this.adapterName}:not-supported`,"LayerView is not supported.");await this._waitForLayerViewUpdate(t);const a=t.createAggregateQuery();return a.where=q(a.where,e.whereClause),$(a,e.filter),t.queryAggregateCount(a,{signal:e.signal})}generateRenderer(e,t){throw new d(`${this.adapterName}:not-supported`,"'generateRenderer' is not supported.")}heatmapStatistics(e){throw new d(`${this.adapterName}:not-supported`,"'heatmapStatistics' is not supported.")}async predominantCategories(e){const{fields:t,view:a,signal:i}=e,r=Ee(t),s=await this._uvFromMemory({valueExpression:r,view:a,signal:i});return Me(s.uniqueValueInfos,t)}async getSampleFeatures(e,t){const{view:a,sampleSize:i,requiredFields:r,returnGeometry:s,filter:l,signal:n}=e;if(!a)throw new d(`${this.adapterName}:not-supported`,"'view' is required to get sample features for binning.");if(a.type==="3d")throw new d(`${this.adapterName}:not-supported`,"3d 'view' is not supported to get sample features for binning.");const o=await a.whenLayerView(this.layer);if(!("queryAggregateJSON"in o&&o.queryAggregateJSON&&"queryAggregates"in o&&o.queryAggregates))throw new d(`${this.adapterName}:not-supported`,"LayerView is not supported.");if(await this._waitForLayerViewUpdate(o),Qe(this,r).length)throw new d(`${this.adapterName}:insufficient-data`,"Layer does not have required fields");const u=1,c=t==="json",m=o.createAggregateQuery();m.outSpatialReference=a?.spatialReference,m.returnGeometry=!!s,m.outFields=r,$(m,l);const{features:p}=c?await o.queryAggregateJSON(m,{signal:n}):await o.queryAggregates(m,{signal:n});return p.length&&i!=null&&i>0&&i<=p.length?Q(p,i,u):p}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType="polygon",this.objectIdField=null,this.supportsSQLExpression=!1,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent;const i="featureReduction"in a?a.featureReduction:null;if(i?.type!=="binning"&&i?.type!=="cluster")throw new d(`${this.adapterName}:invalid-parameters`,`Feature reduction type ${i?.type} is not supported`);this.workerClient=te.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};w([S({readOnly:!0})],se.prototype,"adapterName",void 0),se=w([M("esri.smartMapping.support.adapters.FeatureLayerBinningAdapter")],se);const qa=se;let X=class extends $e{constructor(e){super(e),this._featureLayerAdapter=null,this.workerClient=null,this.adapterName="scene-layer-adapter"}destroy(){this.workerClient?.destroy()}_hasCachedStatistics(e){return this.layer.hasCachedStatistics(e)}_updateQuery(e,t=[],a=[]){if(!e||!a.length)return e;const i=this.layer.objectIdField,r=e.clone(),s=t.filter(n=>{const o=this.layer.getField(n);return!a.includes(o.name)}),l=s.some(n=>this.layer.getField(n).name===i);return r.outFields=l?s:[...s,i],r}async _fetchFeaturesFromMemory(e,t,a){if(!e)throw new d("scene-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const i=await e.whenLayerView(this.layer),r=new AbortController,s=r.signal,l=Se(()=>!i.updating,s);await He(l,5e3,r);const n=pe(this,a,i);V(s);const o=this._updateQuery(t,a??[],n),u=await i.queryFeatures(o,{signal:s});V(s);const c=u.features;return n.length?i.whenGraphicAttributes(c,n):c}async _fetchFeaturesJSONFromMemory(e,t,a){return this._fetchFeaturesFromMemory(e,t,a).then(ee)}_fetchFeaturesForStats(e,t){return A({field:e.field,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,requiredFields:a,signal:e.signal},t))}async _processStatsFromMemoryParams(e){const t=e.features;if(t?.length)return t.length&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic"?{graphics:t}:{featuresJSON:t};const{view:a,field:i,normalizationField:r,valueExpression:s,signal:l}=e,n=await this._fetchFeaturesForStats({field:i,valueExpression:s,normalizationField:r,view:a,signal:l},null);if(!n?.length)throw new d("scene-layer-adapter:insufficient-data","No features are available to calculate statistics");return{graphics:n}}_getCachedStatistics(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.minValue||e.maxValue?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression', 'sqlWhere', 'minValue' or 'maxValue' is specified")):a.queryCachedStatistics(t?.name,{signal:e.signal}).then(i=>{const r=i.stats,{min:s,max:l,totalValuesCount:n}=r;let{avg:o,stddev:u,sum:c,variance:m,count:p}=r;return s===0&&l===0||(o=o===0?null:o,c=c===0?null:c,u=u===0?null:u,m=m===0?null:m,p=p===0?null:p),p==null&&(c!=null&&o!=null?p=Math.round(c/o):n!=null&&(p=n)),{avg:o,count:p,max:l,min:s,stddev:u,sum:c,variance:m}})}async _getNormalizationTotal(e,t,a){const i={include:["sum"]},r=(t?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:i},t):await R({attribute:{field:e,outStatisticTypes:i},features:a})).sum;if(r==null)throw new d("scene-layer-adapter:invalid","invalid normalizationTotal");return r}async _getSummaryStatisticsFromMemory(e,t){const{view:a,field:i,normalizationField:r,valueExpression:s}=e,{featuresJSON:l,graphics:n}=await this._processStatsFromMemoryParams(e),o={field:i,valueExpression:s,normalizationType:e.normalizationType,normalizationField:r,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes};return e.valueExpression&&a&&l&&(o.fieldType=t?.type?Le.toJSON(t.type):null,o.viewInfoParams=E(a),o.timeZone=a.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(o.normalizationTotal=await this._getNormalizationTotal(i,l,n)),l?this.workerClient.summaryStatistics(o,l):R({attribute:o,features:n})}_getCachedStatisticsForUniqueValues(e,t){const a=this.layer,i=t?.name,r=t&&e.field?this.getFieldDomain(e.field):null;return e.valueExpression||e.sqlExpression||e.sqlWhere?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression' or 'sqlWhere' is specified")):a.queryCachedStatistics(i,{signal:e.signal}).then(s=>{const l=s.stats;if(!l.mostFrequentValues)throw new Error;const n=s.labels?.labels,o={},u=[],c="countOF"+i;l.mostFrequentValues.forEach(p=>{const y=new ze({attributes:{}});y.attributes[i]=t&&t.name!==a.objectIdField&&(Ke(t)||N(t))?Number(p.value):p.value,y.attributes[c]=p.count,u.push(y)}),n&&n.forEach(p=>{o[p.value]=p.label});const m=new qe({features:u});return Ne(m,{layer:this,field:e.field,labels:o,view:e.view,signal:e.signal})}).then(s=>ce(s,[r],e.returnAllCodedValues))}async _getUniqueValuesFromMemory(e,t){const{view:a,field:i,field2:r,field3:s,valueExpression:l,returnAllCodedValues:n}=e,o={field:i,field2:r,field3:s,fieldDelimiter:k,valueExpression:l,domains:t,returnAllCodedValues:n},{featuresJSON:u,graphics:c}=await this._processStatsFromMemoryParams(e);return e.valueExpression&&a&&u&&(o.viewInfoParams=E(a),o.timeZone=a.timeZone),u?this.workerClient.uniqueValues(o,u):Te({attribute:o,features:c})}_getCachedStatisticsForHistogram(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.normalizationType?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression' or 'sqlExpression' or 'sqlWhere' or 'normalizationType' is specified")):a.queryCachedStatistics(t&&t.name,{signal:e.signal}).then(i=>{const r=i.stats,{minValue:s,maxValue:l}=e,n=s??r.min,o=l??r.max,u=e.numBins||10,c=La(r.histogram,n,o,u);return at(c,n,o,u)})}async _getClassBreaksFromMemory(e){const{view:t,field:a,normalizationField:i,valueExpression:r}=e,{featuresJSON:s,graphics:l}=await this._processStatsFromMemoryParams(e),n={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:i,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return e.valueExpression&&t&&s&&(n.viewInfoParams=E(t),n.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(n.normalizationTotal=await this._getNormalizationTotal(a,s,l)),s?this.workerClient.classBreaks(n,s):be({attribute:n,features:l})}async _getHistogramFromMemory(e){const{view:t,field:a}=e,{featuresJSON:i,graphics:r}=await this._processStatsFromMemoryParams(e),s={field:a,valueExpression:e.valueExpression,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return e.valueExpression&&t&&i&&(s.viewInfoParams=E(t),s.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(s.normalizationTotal=await this._getNormalizationTotal(a,i,r)),i?this.workerClient.histogram(s,i):me({attribute:s,features:r})}getField(e){return this.layer.getField(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this.layer.getFieldUsageInfo(t.name);return{supportsLabelingInfo:a.supportsLabelingInfo,supportsPopupTemplate:a.supportsPopupTemplate,supportsRenderer:a.supportsRenderer,supportsLayerQuery:a.supportsLayerQuery,supportsStatistics:!0}}getFieldDomain(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.getFieldDomain(e,t):null}createQuery(){return this.layer.createQuery()}summaryStatistics(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.summaryStatistics(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t?.name)?this._getCachedStatistics(e,t).catch(()=>(V(e.signal),this._getSummaryStatisticsFromMemory(e,t))):this._getSummaryStatisticsFromMemory(e,t)}async uniqueValues(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.uniqueValues(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");const t=await ye(e,this),{field:a,field2:i}=e,r=a&&i,s=this.getField(a);return!r&&s&&this._hasCachedStatistics(s.name)?this._getCachedStatisticsForUniqueValues(e,s).catch(()=>(V(e.signal),this._getUniqueValuesFromMemory(e,t))):this._getUniqueValuesFromMemory(e,t)}histogram(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.histogram(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return t&&this._hasCachedStatistics(t.name)?this._getCachedStatisticsForHistogram(e,t).catch(()=>(V(e.signal),this._getHistogramFromMemory(e))):this._getHistogramFromMemory(e)}classBreaks(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.classBreaks(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t?.name)?Promise.reject(new d("scene-layer-adapter:not-supported","Cached stats not supported")):this._getClassBreaksFromMemory(e)}queryFeatureCount(e){return this._featureLayerAdapter?this._featureLayerAdapter.queryFeatureCount(e):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support count query"))}generateRenderer(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.generateRenderer(e,t):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support generateRenderer operation"))}heatmapStatistics(e){return this._featureLayerAdapter?this._featureLayerAdapter.heatmapStatistics(e):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support heatmapStatistics operation"))}async predominantCategories(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.predominantCategories(e);throw new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support predominantCategories")}async getSampleFeatures(e,t){if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");const{view:a,sampleSize:i,requiredFields:r,returnGeometry:s,signal:l}=e,n=1,o=t==="json",u=this.createQuery();u.outFields=r,u.returnGeometry=!!s,u.where=null,u.num=i;let c=[];try{if(c=o?await this._fetchFeaturesJSONFromMemory(a,u,r):await this._fetchFeaturesFromMemory(a,u,r),c.length&&i!=null&&i>0&&i<=c.length)return Q(c,i,n)}catch{V(l)}let m=null;if(this._featureLayerAdapter){const p={...e};delete p.view,m=await this._featureLayerAdapter.getSampleFeatures(p,t)}return m?.length?m:Q(c,c.length,n)}load(e){const t=this.layer.load(e).then(async a=>{this.workerClient=te.getInstance(),await this.workerClient.open(e.signal);const i=a.associatedLayer;if(this.geometryType=a.geometryType,i!=null)return this._featureLayerAdapter=new _({layer:i}),this._featureLayerAdapter.load(e).then(()=>{this.objectIdField=this._featureLayerAdapter.objectIdField,this.supportsSQLExpression=this._featureLayerAdapter.supportsSQLExpression,this.minScale=this._featureLayerAdapter.minScale,this.maxScale=this._featureLayerAdapter.maxScale,this.fullExtent=this._featureLayerAdapter.fullExtent});this.objectIdField=a.objectIdField,this.supportsSQLExpression=!1,this.hasQueryEngine=!1,this.fullExtent=a.fullExtent});return this.addResolvingPromise(t),Promise.resolve(this)}};function La(e,t=e.minimum,a=e.maximum,i){const r=[];for(let u=0;u<i;u++)r[u]=0;const s=e.counts.length,l=e.minimum,n=e.maximum;for(let u=0;u<s;u++){const c=(u+.5)/s,m=((1-c)*l+c*n-t)/(a-t)*i;m>=0&&m<=i&&(r[m===i?i-1:Math.floor(m)]+=e.counts[u])}const o=[];return r.forEach((u,c)=>{const m=new ze({attributes:{}});m.attributes.EXPR_1=c+1,m.attributes.countOFExpr=u,o.push(m)}),new qe({features:o})}w([S({readOnly:!0})],X.prototype,"adapterName",void 0),w([S({constructOnly:!0})],X.prototype,"layer",void 0),X=w([M("esri.smartMapping.support.adapters.SceneLayerAdapter")],X);const ct=X;let ne=class extends ct{constructor(e){super(e),this.adapterName="point-cloud-layer-adapter"}getField(e){return this.layer.fieldsIndex.get(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this._hasCachedStatistics(t.name);return{supportsLabelingInfo:a,supportsPopupTemplate:a,supportsRenderer:a,supportsLayerQuery:!1,supportsStatistics:a}}getFieldDomain(){return null}load(e){const t=this.layer.load(e).then(()=>{this.geometryType="point",this.objectIdField=null,this.supportsSQLExpression=!1,this.hasQueryEngine=!1});return this.addResolvingPromise(t),Promise.resolve(this)}};w([S({readOnly:!0})],ne.prototype,"adapterName",void 0),ne=w([M("esri.smartMapping.support.adapters.PointCloudLayerAdapter")],ne);const za=ne;let oe=class extends Oe{constructor(){super(...arguments),this.adapterName="stream-layer-adapter"}async _summaryStatsFromClientQuery(e,t){const{signal:a,view:i}=e,r=Ie(this,e,t);r.outStatistics=r.outStatistics?.filter(n=>n.outStatisticFieldName!=="totalcount_value");const s=await this._fetchFeatureSetFromMemory(r,i,a),l=Ce(s,N(t)||C(t));return ue(l,e.outStatisticTypes)}};w([S({readOnly:!0})],oe.prototype,"adapterName",void 0),oe=w([M("esri.smartMapping.support.adapters.StreamLayerAdapter")],oe);const _a=oe;var f;(function(e){e[e.CatalogLayer=0]="CatalogLayer",e[e.CatalogFootprintLayer=1]="CatalogFootprintLayer",e[e.CSVLayer=2]="CSVLayer",e[e.FeatureLayer=3]="FeatureLayer",e[e.GeoJSONLayer=4]="GeoJSONLayer",e[e.KnowledgeGraphSublayer=5]="KnowledgeGraphSublayer",e[e.OGCFeatureLayer=6]="OGCFeatureLayer",e[e.OrientedImageryLayer=7]="OrientedImageryLayer",e[e.ParquetLayer=8]="ParquetLayer",e[e.PointCloudLayer=9]="PointCloudLayer",e[e.SceneLayer=10]="SceneLayer",e[e.StreamLayer=11]="StreamLayer",e[e.SubtypeGroupLayer=12]="SubtypeGroupLayer",e[e.SubtypeSublayer=13]="SubtypeSublayer",e[e.WFSLayer=14]="WFSLayer"})(f||(f={}));const Ve={[f.CatalogLayer]:{adapter:_,type:"catalog",label:"CatalogLayer"},[f.CatalogFootprintLayer]:{adapter:_,type:"catalog-footprint",label:"CatalogFootprintLayer"},[f.CSVLayer]:{adapter:Va,type:"csv",label:"CSVLayer"},[f.FeatureLayer]:{adapter:_,type:"feature",label:"FeatureLayer"},[f.GeoJSONLayer]:{adapter:_,type:"geojson",label:"GeoJSONLayer"},[f.KnowledgeGraphSublayer]:{adapter:_,type:"knowledge-graph-sublayer",label:"KnowledgeGraphSublayer"},[f.OGCFeatureLayer]:{adapter:Oe,type:"ogc-feature",label:"OGCFeatureLayer"},[f.OrientedImageryLayer]:{adapter:_,type:"oriented-imagery",label:"OrientedImageryLayer"},[f.ParquetLayer]:{adapter:_,type:"parquet",label:"ParquetLayer"},[f.PointCloudLayer]:{adapter:za,type:"point-cloud",label:"PointCloudLayer"},[f.SceneLayer]:{adapter:ct,type:"scene",label:"SceneLayer"},[f.StreamLayer]:{adapter:_a,type:"stream",label:"StreamLayer"},[f.SubtypeGroupLayer]:{adapter:_,type:"subtype-group",label:"SubtypeGroupLayer"},[f.SubtypeSublayer]:{adapter:_,type:"subtype-sublayer",label:"SubtypeSublayer"},[f.WFSLayer]:{adapter:_,type:"wfs",label:"WFSLayer"}},Ae=[f.CatalogLayer,f.CatalogFootprintLayer,f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.KnowledgeGraphSublayer,f.OGCFeatureLayer,f.OrientedImageryLayer,f.ParquetLayer,f.PointCloudLayer,f.SceneLayer,f.StreamLayer,f.SubtypeGroupLayer,f.SubtypeSublayer,f.WFSLayer];f.CatalogFootprintLayer,f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.KnowledgeGraphSublayer,f.OGCFeatureLayer,f.OrientedImageryLayer,f.ParquetLayer,f.SceneLayer,f.StreamLayer,f.SubtypeGroupLayer,f.SubtypeSublayer,f.WFSLayer;const Ta=[f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.OGCFeatureLayer,f.KnowledgeGraphSublayer,f.OrientedImageryLayer,f.ParquetLayer,f.StreamLayer,f.WFSLayer];function ba(e){return e.map(t=>Ve[t].label)}function Ea(e,t=Ae,a){if(e instanceof $e)return e;const i=$a(e,t);return i?a?new qa({layer:e}):new i({layer:e}):null}function $a(e,t=Ae){let a=null;return t.some(i=>{const r=e.type===Ve[i].type;return r&&(a=Ve[i].adapter),r}),a}async function Ca(e){if(!e?.layer||!e.field&&!e.valueExpression)throw new d("unique-values:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");const t=e.valueExpression||e.sqlExpression,a=t&&!e.sqlExpression;if(t){if(a){if(!e.view)throw new d("unique-values:missing-parameters","View is required when 'valueExpression' is specified")}else if(!e.valueExpression)throw new d("unique-values:missing-parameters","'valueExpression' parameters are required")}e.forBinning&&Wt(e,"unique-values");const{layer:i,...r}=e,s=e.forBinning?Ta:Ae,l=Ea(i,s,e.forBinning);if(!l)throw new d("unique-values:invalid-parameters","'layer' must be one of these types: "+ba(s).join(", "));const n={layerAdapter:l,...r},o=n.signal!=null?{signal:n.signal}:null;await l.load(o);const u=await A({field:n.field,field2:n.field2,field3:n.field3,valueExpression:n.valueExpression}),c=It(l,u,"unique-values:invalid-parameters");if(c)throw c;n.filter&&!n.filter.spatialRelationship&&(n.filter.spatialRelationship="intersects");const m=Ot(n.filter,"summary-statistics:invalid-parameters");if(m)throw m;return n}async function tr(e){const{layerAdapter:t,...a}=await Ca(e);return t.uniqueValues(a)}export{tr as default};
